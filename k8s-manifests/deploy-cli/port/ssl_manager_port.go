package port

import (
	"context"
	"time"

	"deploy-cli/domain"
)

// SSLManagerPort defines the interface for SSL certificate management
type SSLManagerPort interface {
	// Certificate Lifecycle Management
	ManageCertificateLifecycle(ctx context.Context, environment domain.Environment, chartsDir string) error
	
	// Certificate Loading
	LoadExistingCertificates(ctx context.Context, environment domain.Environment) error
	
	// Certificate Generation
	GenerateSSLCertificates(ctx context.Context) error
	
	// Certificate Validation
	ValidateGeneratedCertificates(ctx context.Context) error
	ValidateCertificatePEM(certPEM, certType string) error
	ValidateCertificate(certBase64, certType string) error
	
	// Certificate Injection
	InjectCertificateData(ctx context.Context, chartPath string) error
	InjectCommonSSLCertificates(ctx context.Context, chartPath string) error
	InjectServiceSSLCertificates(ctx context.Context, chartPath string, chartName string) error
	
	// Certificate Secrets Management
	GenerateSSLCertificateSecrets(ctx context.Context, environment domain.Environment) error
	CreateSSLCertificateSecret(ctx context.Context, serviceName, secretName, namespace string) error
	
	// Certificate Information
	GetGeneratedCertificates() *GeneratedCertificates
	HasCertificates() bool
	GetCertificateGenerationTime() time.Time
}

// GeneratedCertificates represents SSL certificates generated by the system
type GeneratedCertificates struct {
	CACert           string
	CAPrivateKey     string
	ServerCert       string
	ServerPrivateKey string
	Generated        time.Time
}