apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yaml --out ./k8s-manifests/
    kompose.version: 1.36.0 (ae2a39403)
    rask.group: alt-backend
  labels:
    io.kompose.service: alt-backend
  name: alt-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: alt-backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yaml --out ./k8s-manifests/
        kompose.version: 1.36.0 (ae2a39403)
        rask.group: alt-backend
      labels:
        io.kompose.service: alt-backend
    spec:
      containers:
        - env:
            - name: DB_HOST
              value: db.alt-database.svc.cluster.local
            - name: DB_NAME
              value: alt
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: DB_PASSWORD
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: alt_db_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: POSTGRES_PASSWORD
            - name: DB_APP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: DB_APP_PASSWORD
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: HF_TOKEN
            - name: MEILI_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: MEILI_MASTER_KEY
            - name: MEILISEARCH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: MEILISEARCH_API_KEY
            - name: PRE_PROCESSOR_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: PRE_PROCESSOR_DB_PASSWORD
            - name: DB_TAG_GENERATOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: DB_TAG_GENERATOR_PASSWORD
            - name: SEARCH_INDEXER_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SEARCH_INDEXER_DB_PASSWORD
            - name: CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: CLICKHOUSE_PASSWORD
            - name: APP_CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: APP_CLICKHOUSE_PASSWORD
          image: alt-backend:production
          imagePullPolicy: Never
          livenessProbe:
            httpGet:
              path: /v1/health
              port: 9000
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 10
          name: alt-backend
          ports:
            - containerPort: 9000
              protocol: TCP
          resources:
            limits:
              cpu: "4"
              memory: "2Gi"
            requests:
              cpu: "2"
              memory: "1Gi"
          tty: true
          volumeMounts:
            - mountPath: /app/.env
              name: alt-backend-cm0
              subPath: .env
            - mountPath: /app/ssl
              name: ssl-certs
              readOnly: true
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: .env
                path: .env
            name: alt-backend-cm0
          name: alt-backend-cm0
        - name: ssl-certs
          secret:
            secretName: postgres-ssl-certs
