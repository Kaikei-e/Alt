apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-external-config
  labels:
    app: nginx-external
    component: ingress
    tier: infrastructure
data:
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    # セキュリティ強化設定
    worker_rlimit_nofile 65535;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # ログフォーマット
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"'
                        ' rt=$request_time uct="$upstream_connect_time"'
                        ' uht="$upstream_header_time" urt="$upstream_response_time"';
        
        access_log /var/log/nginx/access.log main;
        
        # セキュリティヘッダー
        server_tokens off;
        
        # パフォーマンス設定
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        keepalive_requests 100;
        
        # バッファサイズ制限
        client_body_buffer_size 128k;
        client_max_body_size 10m;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 4k;
        
        # タイムアウト設定
        client_body_timeout 12;
        client_header_timeout 12;
        send_timeout 10;
        
        # Gzip圧縮
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml
            application/x-font-ttf
            font/opentype;
        gzip_disable "msie6";
        
        # レート制限
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
        
        # アップストリーム設定
        upstream frontend {
            server alt-frontend.alt-apps.svc.cluster.local:3000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        upstream backend {
            server alt-backend.alt-apps.svc.cluster.local:9000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        # メインサーバー設定
        include /etc/nginx/conf.d/*.conf;
    }
  
  default.conf: |
    server {
        listen 8080;
        server_name _;
        
        # セキュリティヘッダー
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        # CSP（Content Security Policy）
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; media-src 'self'; object-src 'none'; child-src 'self'; form-action 'self'; base-uri 'self';" always;
        
        # HSTS（HTTPS Strict Transport Security）
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # ヘルスチェックエンドポイント
        location /healthz {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
        
        # Server-Sent Events専用設定
        location /api/v1/sse/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend/v1/sse/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection '';
            
            # SSE専用設定
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 24h;
            proxy_send_timeout 24h;
            chunked_transfer_encoding off;
            
            # CORS設定
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Cache-Control, Authorization" always;
        }
        
        # API proxy設定
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "keep-alive";
            
            # タイムアウト設定
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # バッファ設定
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # キャッシュ制御
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }
        
        # ログイン関連のレート制限
        location ~* /api/v1/(auth|login) {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "keep-alive";
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # 静的ファイル最適化
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # キャッシュ設定
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Gzip有効化
            gzip_static on;
        }
        
        # フロントエンド向けのすべてのリクエスト
        location / {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "keep-alive";
            
            # WebSocket対応
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # タイムアウト設定
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # バッファ設定
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # セキュリティ: 隠しファイル等へのアクセス拒否
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # セキュリティ: バックアップファイルへのアクセス拒否
        location ~* \.(bak|backup|old|tmp|temp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # エラーページ
        error_page 400 401 403 404 /40x.html;
        location = /40x.html {
            internal;
            return 400 "Bad Request";
        }
        
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
            return 500 "Server Error";
        }
    }