{{- if and .Values.secrets.create (not .Values.secrets.existingSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secrets.name | default (printf "%s-db-secret" (include "alt-atlas-migrations.fullname" .)) }}
  labels:
    {{- include "alt-atlas-migrations.labels" . | nindent 4 }}
type: Opaque
data:
  # Database connection URL for Atlas
  database-url: {{ include "alt-atlas-migrations.databaseURL" . | b64enc }}
  
  # Individual components (if needed)
  DB_USERNAME: {{ .Values.database.username | b64enc }}
  DB_PASSWORD: {{ .Values.database.password | b64enc }}
  DB_HOST: {{ .Values.database.host | b64enc }}
  DB_PORT: {{ .Values.database.port | toString | b64enc }}
  DB_NAME: {{ .Values.database.name | b64enc }}
  DB_SSL_MODE: {{ .Values.database.sslMode | b64enc }}
{{- end }}
---
{{- if .Values.secrets.existingSecret }}
# Reference to existing secret containing database credentials
# Expected keys:
# - database-url: Full PostgreSQL connection string
# OR individual components:
# - {{ .Values.secrets.keys.username }}: Database username
# - {{ .Values.secrets.keys.password }}: Database password
#
# The migration job will use the existing secret: {{ .Values.secrets.existingSecret }}
{{- end }}