# API-Safe Mode values for pre-processor-sidecar
# Deployment with limited API usage to prevent overuse (max 5 subscriptions per batch)

# Enable deployment mode with schedule processing
deploymentMode: "deployment"

image:
  repository: kaikei/pre-processor-sidecar
  tag: api-safe
  pullPolicy: IfNotPresent

# Deployment configuration for continuous dual schedule processing
deployment:
  replicas: 1
  scheduleMode: true  # Enable --schedule-mode flag

# Production resources for continuous processing
resources:
  requests:
    memory: "128Mi"
    cpu: "100m"
  limits:
    memory: "256Mi"   # More memory for continuous processing
    cpu: "200m"       # Adequate CPU for dual schedules

# Production environment variables
env:
  # Database connection
  DB_HOST: "postgres.alt-database.svc.cluster.local"
  DB_NAME: "alt"
  DB_PORT: "5432"
  DB_SSL_MODE: "disable"
  PRE_PROCESSOR_SIDECAR_DB_USER: "pre_processor_sidecar_user"

  # Service configuration
  LOG_LEVEL: "debug"  # 一時的にデバッグレベルに変更
  SERVICE_NAME: "pre-processor-sidecar-schedule"

  # OAuth2 & Kubernetes configuration - 正しいシークレット名に設定
  KUBERNETES_IN_CLUSTER: "true"
  KUBERNETES_NAMESPACE: "alt-processing"
  OAUTH2_TOKEN_SECRET_NAME: "pre-processor-sidecar-oauth2-token"  # oauth-init作成のシークレット使用
  OAUTH2_TOKEN_REFRESH_BUFFER: "300"  # 5 minutes in seconds
  
  # Token management configuration
  TOKEN_MANAGEMENT_ENABLED: "true"
  TOKEN_AUTO_REFRESH: "true"

  # Inoreader API configuration - SAFETY LIMITS
  INOREADER_BASE_URL: "https://www.inoreader.com/reader/api/0"
  MAX_ARTICLES_PER_REQUEST: "50"   # Reduced from 100 to 50 for safety
  API_DAILY_LIMIT: "90"            # Zone 1 limit monitoring with 10% safety buffer

  # CRITICAL: Proxy configuration - Envoy egress ONLY
  HTTPS_PROXY: "http://envoy-proxy.alt-apps.svc.cluster.local:8081"
  NO_PROXY: "localhost,127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,.svc.cluster.local,*.alt-processing.svc.cluster.local,*.alt-apps.svc.cluster.local,*.alt-database.svc.cluster.local"

# Use existing secret configuration
secret:
  create: false  # Use existing secret
  name: pre-processor-sidecar-secrets  # Reference existing properly configured secret

envFromSecret:
  name: pre-processor-sidecar-secrets
  keys:
    - INOREADER_CLIENT_ID
    - INOREADER_CLIENT_SECRET
    - INOREADER_REFRESH_TOKEN
    - PRE_PROCESSOR_SIDECAR_DB_PASSWORD

# Production ConfigMap
configMap:
  create: true
  data:
    LOG_LEVEL: "info"
    SERVICE_NAME: "pre-processor-sidecar-schedule"
    SCHEDULE_MODE: "dual"
    SUBSCRIPTION_SYNC_INTERVAL: "4h"
    ARTICLE_FETCH_INTERVAL: "30m"

# Service account with minimal permissions
serviceAccount:
  create: true
  name: ""
  annotations: {}
  automountServiceAccountToken: true  # Required for OAuth2 token management

# Production security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  runAsUser: 1000

# Production pod configuration
nodeSelector: {}
tolerations: []
affinity: {}

# Production labels and annotations
commonLabels:
  environment: production
  component: schedule-processor
  mode: dual-schedule

commonAnnotations:
  description: "API-SAFE dual schedule processor - limited to 5 subscriptions per batch"
  contact: "team@alt.local"
  safety: "api-overuse-prevention"

podLabels:
  schedule-type: dual

podAnnotations:
  linkerd.io/inject: enabled
  # Critical: Skip HTTPS (443) to use envoy proxy, PostgreSQL (5432) for direct connection
  config.linkerd.io/skip-outbound-ports: "443,5432"
  # Add production monitoring annotations
  prometheus.io/scrape: "false"  # No metrics for personal use

imagePullSecrets: []

# OAuth2 Initialization Job (disabled for deployment mode)
oauth2Init:
  enabled: false  # Not needed for continuous deployment