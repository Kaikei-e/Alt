# Default values for pre-processor-sidecar
# Deployment mode only - continuous scheduling

image:
  repository: kaikei/pre-processor-sidecar  # UPDATED: Match skaffold registry
  pullPolicy: IfNotPresent
  tag: "oauth2-latest"  # UPDATED: OAuth2-enabled version

# Deployment configuration - continuous scheduling mode
deploymentMode: "deployment"

# Deployment specific configuration (when deploymentMode is "deployment")
deployment:
  replicas: 1
  scheduleMode: true  # Enable --schedule-mode flag for dual schedule processing
  

# Resource configuration (optimized for continuous deployment)
resources:
  requests:
    memory: "64Mi"   # Reduced for CronJob
    cpu: "50m"       # Minimal CPU for API calls
  limits:
    memory: "128Mi"  # Conservative limit
    cpu: "100m"      # Sufficient for OAuth2 + API calls

# Environment variables
env:
  # Database connection (Clean Architecture - explicit configuration)
  DB_HOST: "postgres.alt-database.svc.cluster.local"
  DB_NAME: "alt"
  DB_PORT: "5432"
  DB_SSL_MODE: "disable"  # FIXED: Explicit SSL mode for Linkerd mTLS
  PRE_PROCESSOR_SIDECAR_DB_USER: "pre_processor_sidecar_user"  # FIXED: Explicit user name
  
  # Service configuration
  LOG_LEVEL: "info"
  SERVICE_NAME: "pre-processor-sidecar"
  
  # OAuth2 & Kubernetes configuration (NEW)
  KUBERNETES_IN_CLUSTER: "true"
  KUBERNETES_NAMESPACE: "alt-processing"
  OAUTH2_TOKEN_SECRET_NAME: "pre-processor-sidecar-oauth2-token"
  OAUTH2_TOKEN_REFRESH_BUFFER: "300"  # 5 minutes in seconds
  TOKEN_STORAGE_TYPE: "kubernetes_secret"  # Use Kubernetes Secret for token storage
  
  # OAuth2 Token Management - ENHANCED
  TOKEN_MANAGEMENT_ENABLED: "true"  # Enable proactive token management
  TOKEN_AUTO_REFRESH: "true"        # Enable automatic token refresh
  ENABLE_SECRET_WATCH: "true"       # Enable automatic secret watching and reload
  TOKEN_PROACTIVE_REFRESH: "true"   # Enable proactive refresh before expiry
  
  # Inoreader API configuration
  INOREADER_BASE_URL: "https://www.inoreader.com/reader/api/0"
  INOREADER_OAUTH2_BASE_URL: "https://www.inoreader.com"  # OAuth2 specific base URL
  SYNC_INTERVAL: "30m"
  MAX_ARTICLES_PER_REQUEST: "100"
  API_DAILY_LIMIT: "100"  # Zone 1 limit
  
  # Rotation processing configuration - FIXED: デフォルト値とHelmの統一
  MAX_DAILY_ROTATIONS: "2"  # Process each subscription 2 times per day (batch processing)
  ROTATION_INTERVAL_MINUTES: "30"  # 30分間隔での処理
  BATCH_SIZE: "3"           # Process 3 subscriptions per execution (API効率化)
  
  # Proxy configuration (CRITICAL: Envoy egress only)  
  HTTPS_PROXY: "http://envoy-proxy.alt-apps.svc.cluster.local:8081"
  # All external requests must go through Envoy proxy for security
  NO_PROXY: "localhost,127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,.svc.cluster.local,*.alt-processing.svc.cluster.local,*.alt-apps.svc.cluster.local,*.alt-database.svc.cluster.local"

# Secret configuration (OAuth2 credentials)
secret:
  create: true
  name: ""  # Will use default naming
  data: {}  # Override in values-production.yaml

# Environment variables from secrets
envFromSecret:
  name: ""  # Will use default naming  
  keys:
    - INOREADER_CLIENT_ID
    - INOREADER_CLIENT_SECRET
    - INOREADER_ACCESS_TOKEN
    - INOREADER_REFRESH_TOKEN
    - PRE_PROCESSOR_SIDECAR_DB_PASSWORD

# ConfigMap configuration
configMap:
  create: true
  data:
    LOG_LEVEL: "info"
    SERVICE_NAME: "pre-processor-sidecar"

# Service account (UPDATED: OAuth2 token management requires K8s API access)
serviceAccount:
  create: true
  name: ""
  annotations: {}
  automountServiceAccountToken: true  # CHANGED: Required for OAuth2 token management

# Security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL

# Pod configuration
nodeSelector: {}
tolerations: []
affinity: {}

# Common labels and annotations
commonLabels: {}
commonAnnotations: {}
podLabels: {}
podAnnotations:
  linkerd.io/inject: enabled
  # Skip HTTPS port (443) to use envoy proxy, and PostgreSQL (5432) for direct connection
  config.linkerd.io/skip-outbound-ports: "443,5432"

imagePullSecrets: []
