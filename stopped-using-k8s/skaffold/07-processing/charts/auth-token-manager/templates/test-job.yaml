{{- if .Values.testJob.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "auth-token-manager.fullname" . }}-test-{{ randAlphaNum 8 | lower }}
  namespace: {{ .Values.kubernetes.namespace }}
  labels:
    {{- include "auth-token-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 600  # 10 minutes timeout
  template:
    metadata:
      labels:
        {{- include "auth-token-manager.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: test
    spec:
      serviceAccountName: {{ include "auth-token-manager.serviceAccountName" . }}
      restartPolicy: Never
      shareProcessNamespace: true  # Required for Playwright browser process management
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}-test
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["deno", "run", "--allow-all", "main.ts"]
        args: 
        {{- toYaml .Values.testJob.command | nindent 8 }}
        envFrom:
        - configMapRef:
            name: {{ include "auth-token-manager.fullname" . }}-config
        - secretRef:
            name: {{ include "auth-token-manager.fullname" . }}-secrets
        resources:
          {{- toYaml .Values.testJob.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
          readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
          runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
          capabilities:
            {{- toYaml .Values.securityContext.capabilities | nindent 12 }}
        volumeMounts:
        - name: shm-volume
          mountPath: /dev/shm
      volumes:
      - name: shm-volume
        emptyDir:
          medium: Memory
          sizeLimit: 256Mi  # Shared memory for Chromium
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
{{- end }}