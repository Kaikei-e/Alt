# Here we deploy cloudflared images. The tunnel credentials are stored in
# a k8s secret, and the configuration is stored in a k8s configmap.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflare-tunnel.fullname" . }}
  labels:
    {{- include "cloudflare-tunnel.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cloudflare-tunnel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # These are here so the deployment rolls when the config or secret change.
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "cloudflare-tunnel.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cloudflare-tunnel.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - tunnel
            # Points cloudflared to the config file, which configures what
            # cloudflared will actually do. This file is created by a ConfigMap.
            - --config
            - /etc/cloudflared/config/config.yaml
            - run
          env:
{{- if .Values.cloudflare.tunnel_token }}
            # 2025Âπ¥Êé®Â•®: TUNNEL_TOKENÁí∞Â¢ÉÂ§âÊï∞‰ΩøÁî®
            - name: TUNNEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cloudflare.secretName | default (include "cloudflare-tunnel.fullname" .) }}
                  key: tunnel_token
{{- end }}
          livenessProbe:
            httpGet:
              # Cloudflared has a /ready endpoint which returns 200 if and only if
              # it has an active connection to the edge.
              path: /ready
              port: 2000
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 30
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config
              readOnly: true
{{- if and .Values.cloudflare.tunnelId (not .Values.cloudflare.tunnel_token) }}
            # LegacyÊñπÂºè: Ë™çË®º„Éï„Ç°„Ç§„É´„Éû„Ç¶„É≥„Éà (tunnel_token‰ΩøÁî®ÊôÇ„ÅØ‰∏çË¶Å)
            - name: creds
              mountPath: /etc/cloudflared/creds
              readOnly: true
{{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
{{- if and .Values.cloudflare.tunnelId (not .Values.cloudflare.tunnel_token) }}
        # LegacyÊñπÂºè: Ë™çË®º„Éï„Ç°„Ç§„É´Áî®Secret (tunnel_token‰ΩøÁî®ÊôÇ„ÅØ‰∏çË¶Å)
        - name: creds
          secret:
            secretName: {{ .Values.cloudflare.secretName | default (include "cloudflare-tunnel.fullname" .) }}
{{- end }}
        - name: config
          configMap:
            name: {{ include "cloudflare-tunnel.fullname" . }}
            items:
              - key: config.yaml
                path: config.yaml
      {{- with .Values.nodeSelector }}
        {{- if .Values.secrets.cloudflareAccess.enabled }}
        # üîê Secret „Åã„ÇâÁí∞Â¢ÉÂ§âÊï∞„Å´Ê≥®ÂÖ•
        env:
        - name: cf_access_client_id
          valueFrom:
            secretKeyRef:
              name: {{ include "nginx.secretName" . }}
              key: cf-access-client-id
        - name: cf_access_client_secret
          valueFrom:
            secretKeyRef:
              name: {{ include "nginx.secretName" . }}
              key: cf-access-client-secret
        {{- end }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- else }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 10
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                  {{- range $k, $v := include "cloudflare-tunnel.selectorLabels" . | fromYaml }}
                    - key: {{ $k }}
                      operator: In
                      values:
                        - {{ $v }}
                  {{- end }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
