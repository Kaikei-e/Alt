apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "meilisearch.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "meilisearch.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  # MeiliSearch configuration
  environment: {{ .Values.environment | quote }}
  log-level: {{ .Values.logging.level | quote }}
  analytics-disabled: {{ .Values.analytics.disabled | quote }}
  
  # Search configuration
  {{- if .Values.search.maxIndexSize }}
  max-index-size: {{ .Values.search.maxIndexSize | quote }}
  {{- end }}
  {{- if .Values.search.maxTaskQueueSize }}
  max-task-queue-size: {{ .Values.search.maxTaskQueueSize | quote }}
  {{- end }}
  {{- if .Values.search.payloadSizeLimit }}
  payload-size-limit: {{ .Values.search.payloadSizeLimit | quote }}
  {{- end }}
  
  # RSS-specific search configuration
  {{- if .Values.rssSearch.enabled }}
  rss-search.toml: |
    # RSS Feed Search Configuration
    [indexes]
    
    # RSS Feed content index
    [indexes.rss_content]
    primary_key = "id"
    
    # Searchable attributes for RSS content
    searchable_attributes = [
      "title",
      "content", 
      "description",
      "tags",
      "author",
      "category"
    ]
    
    # Filterable attributes
    filterable_attributes = [
      "feed_id",
      "published_at",
      "category",
      "tags",
      "language",
      "source"
    ]
    
    # Sortable attributes
    sortable_attributes = [
      "published_at",
      "title",
      "relevance_score"
    ]
    
    # Display attributes
    displayed_attributes = [
      "id",
      "title", 
      "description",
      "content_snippet",
      "published_at",
      "author",
      "feed_title",
      "category",
      "tags",
      "url"
    ]
    
    # RSS Feed metadata index
    [indexes.rss_feeds]
    primary_key = "feed_id"
    
    searchable_attributes = [
      "title",
      "description", 
      "category",
      "tags"
    ]
    
    filterable_attributes = [
      "active",
      "language",
      "category", 
      "last_updated",
      "feed_type"
    ]
    
    sortable_attributes = [
      "title",
      "last_updated",
      "subscriber_count"
    ]
    
    # Search settings optimized for RSS content
    [search_settings]
    
    # Ranking rules for RSS content relevance
    ranking_rules = [
      "words",
      "typo", 
      "proximity",
      "attribute",
      "sort",
      "exactness",
      "published_at:desc"
    ]
    
    # Stop words for better search results
    stop_words = [
      "the", "a", "an", "and", "or", "but", "in", "on", "at", "to", "for", "of", "with", "by", "from", "up", "about", "into", "through", "during", "before", "after", "above", "below", "between", "among", "throughout", "despite", "towards", "upon", "concerning", "regarding", "according", "within", "without", "throughout"
    ]
    
    # Synonyms for RSS content
    synonyms = {
      "tech" = ["technology", "technical", "it"],
      "ai" = ["artificial intelligence", "machine learning", "ml"],
      "dev" = ["development", "developer", "programming"],
      "news" = ["article", "story", "report"]
    }
    
    # Typo tolerance
    typo_tolerance = {
      enabled = true
      min_word_size_for_typos = {
        one_typo = 4
        two_typos = 8
      }
      disable_on_words = []
      disable_on_attributes = []
    }
    
    # Faceting settings
    faceting = {
      max_values_per_facet = 100
      sort_facet_values_by = {
        "*" = "count"
        "category" = "alpha"
        "tags" = "alpha"
      }
    }
    
    # Pagination
    pagination = {
      max_total_hits = 10000
    }
  {{- end }}
  
  {{- if .Values.search.customSettings }}
  custom-settings.json: |
    {{- .Values.search.customSettings | toJson | nindent 4 }}
  {{- end }}
  
  {{- if .Values.extraConfig }}
  {{- range $key, $value := .Values.extraConfig }}
  {{ $key }}: |
    {{- $value | nindent 4 }}
  {{- end }}
  {{- end }}