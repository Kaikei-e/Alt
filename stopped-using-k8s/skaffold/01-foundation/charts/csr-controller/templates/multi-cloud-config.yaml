apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "csr-controller.fullname" . }}-multi-cloud-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: multi-cloud-manager
data:
  config.yaml: |
    # Multi-Cloud Manager Configuration
    multicloud:
      enabled: {{ .Values.multiCloudManager.enabled | default true }}
      mode: {{ .Values.multiCloudManager.mode | default "hybrid" }}
      
      # Cloud Provider Configurations
      providers:
        aws:
          enabled: {{ .Values.multiCloudManager.aws.enabled | default false }}
          region: {{ .Values.multiCloudManager.aws.region | default "us-west-2" }}
          profile: {{ .Values.multiCloudManager.aws.profile | default "default" }}
          certificateManager:
            enabled: {{ .Values.multiCloudManager.aws.certificateManager.enabled | default true }}
            region: {{ .Values.multiCloudManager.aws.certificateManager.region | default "us-west-2" }}
          secretsManager:
            enabled: {{ .Values.multiCloudManager.aws.secretsManager.enabled | default true }}
            region: {{ .Values.multiCloudManager.aws.secretsManager.region | default "us-west-2" }}
          kms:
            enabled: {{ .Values.multiCloudManager.aws.kms.enabled | default true }}
            keyId: {{ .Values.multiCloudManager.aws.kms.keyId | default "" }}
            region: {{ .Values.multiCloudManager.aws.kms.region | default "us-west-2" }}
          
        azure:
          enabled: {{ .Values.multiCloudManager.azure.enabled | default false }}
          location: {{ .Values.multiCloudManager.azure.location | default "westus2" }}
          resourceGroup: {{ .Values.multiCloudManager.azure.resourceGroup | default "alt-rss-reader" }}
          keyVault:
            enabled: {{ .Values.multiCloudManager.azure.keyVault.enabled | default true }}
            vaultName: {{ .Values.multiCloudManager.azure.keyVault.vaultName | default "alt-key-vault" }}
            location: {{ .Values.multiCloudManager.azure.keyVault.location | default "westus2" }}
          certificateManager:
            enabled: {{ .Values.multiCloudManager.azure.certificateManager.enabled | default true }}
            
        gcp:
          enabled: {{ .Values.multiCloudManager.gcp.enabled | default false }}
          projectId: {{ .Values.multiCloudManager.gcp.projectId | default "" }}
          zone: {{ .Values.multiCloudManager.gcp.zone | default "us-west1-a" }}
          secretManager:
            enabled: {{ .Values.multiCloudManager.gcp.secretManager.enabled | default true }}
            projectId: {{ .Values.multiCloudManager.gcp.secretManager.projectId | default "" }}
          kms:
            enabled: {{ .Values.multiCloudManager.gcp.kms.enabled | default true }}
            projectId: {{ .Values.multiCloudManager.gcp.kms.projectId | default "" }}
            keyRing: {{ .Values.multiCloudManager.gcp.kms.keyRing | default "alt-key-ring" }}
            location: {{ .Values.multiCloudManager.gcp.kms.location | default "global" }}
            
        onpremise:
          enabled: {{ .Values.multiCloudManager.onpremise.enabled | default true }}
          clusters: {{ .Values.multiCloudManager.onpremise.clusters | default (list) | toYaml | nindent 12 }}
          datacenters: {{ .Values.multiCloudManager.onpremise.datacenters | default (list) | toYaml | nindent 12 }}

      # Cross-Cloud Synchronization
      crossCloudSync:
        enabled: {{ .Values.multiCloudManager.crossCloudSync.enabled | default true }}
        interval: {{ .Values.multiCloudManager.crossCloudSync.interval | default "5m" }}
        conflictResolution: {{ .Values.multiCloudManager.crossCloudSync.conflictResolution | default "latest-wins" }}
        encryption:
          enabled: {{ .Values.multiCloudManager.crossCloudSync.encryption.enabled | default true }}
          algorithm: {{ .Values.multiCloudManager.crossCloudSync.encryption.algorithm | default "AES-256-GCM" }}
        compression:
          enabled: {{ .Values.multiCloudManager.crossCloudSync.compression.enabled | default true }}
          algorithm: {{ .Values.multiCloudManager.crossCloudSync.compression.algorithm | default "gzip" }}

      # Federation Configuration
      federation:
        enabled: {{ .Values.multiCloudManager.federation.enabled | default true }}
        federatedClusters: {{ .Values.multiCloudManager.federation.federatedClusters | default (list) | toYaml | nindent 10 }}
        crossClusterCommunication:
          enabled: {{ .Values.multiCloudManager.federation.crossClusterCommunication.enabled | default true }}
          protocol: {{ .Values.multiCloudManager.federation.crossClusterCommunication.protocol | default "grpc" }}
          encryption: {{ .Values.multiCloudManager.federation.crossClusterCommunication.encryption | default "tls" }}
        certificateSharing:
          enabled: {{ .Values.multiCloudManager.federation.certificateSharing.enabled | default true }}
          sharingPolicy: {{ .Values.multiCloudManager.federation.certificateSharing.sharingPolicy | default "selective" }}

      # Hybrid Environment Management
      hybrid:
        enabled: {{ .Values.multiCloudManager.hybrid.enabled | default true }}
        onPremiseIntegration:
          enabled: {{ .Values.multiCloudManager.hybrid.onPremiseIntegration.enabled | default true }}
          connectivityMode: {{ .Values.multiCloudManager.hybrid.onPremiseIntegration.connectivityMode | default "vpn" }}
          dataResidency:
            enabled: {{ .Values.multiCloudManager.hybrid.onPremiseIntegration.dataResidency.enabled | default true }}
            regions: {{ .Values.multiCloudManager.hybrid.onPremiseIntegration.dataResidency.regions | default (list "us" "eu") | toYaml | nindent 14 }}
        cloudBursting:
          enabled: {{ .Values.multiCloudManager.hybrid.cloudBursting.enabled | default true }}
          primaryCloud: {{ .Values.multiCloudManager.hybrid.cloudBursting.primaryCloud | default "onpremise" }}
          burstClouds: {{ .Values.multiCloudManager.hybrid.cloudBursting.burstClouds | default (list "aws" "azure" "gcp") | toYaml | nindent 12 }}
          thresholds:
            cpu: {{ .Values.multiCloudManager.hybrid.cloudBursting.thresholds.cpu | default 80 }}
            memory: {{ .Values.multiCloudManager.hybrid.cloudBursting.thresholds.memory | default 85 }}
            storage: {{ .Values.multiCloudManager.hybrid.cloudBursting.thresholds.storage | default 90 }}

      # Auto Failover Configuration
      autoFailover:
        enabled: {{ .Values.multiCloudManager.autoFailover.enabled | default true }}
        detectionInterval: {{ .Values.multiCloudManager.autoFailover.detectionInterval | default "30s" }}
        failoverTimeout: {{ .Values.multiCloudManager.autoFailover.failoverTimeout | default "5m" }}
        healthChecks:
          enabled: {{ .Values.multiCloudManager.autoFailover.healthChecks.enabled | default true }}
          interval: {{ .Values.multiCloudManager.autoFailover.healthChecks.interval | default "15s" }}
          timeout: {{ .Values.multiCloudManager.autoFailover.healthChecks.timeout | default "10s" }}
          retries: {{ .Values.multiCloudManager.autoFailover.healthChecks.retries | default 3 }}
        failoverStrategies:
          primary: {{ .Values.multiCloudManager.autoFailover.failoverStrategies.primary | default "geographic" }}
          secondary: {{ .Values.multiCloudManager.autoFailover.failoverStrategies.secondary | default "performance" }}
          tertiary: {{ .Values.multiCloudManager.autoFailover.failoverStrategies.tertiary | default "cost" }}

      # Disaster Recovery Configuration
      disasterRecovery:
        enabled: {{ .Values.multiCloudManager.disasterRecovery.enabled | default true }}
        rpo: {{ .Values.multiCloudManager.disasterRecovery.rpo | default "1h" }}  # Recovery Point Objective
        rto: {{ .Values.multiCloudManager.disasterRecovery.rto | default "15m" }}  # Recovery Time Objective
        backupStrategy:
          primary: {{ .Values.multiCloudManager.disasterRecovery.backupStrategy.primary | default "continuous" }}
          secondary: {{ .Values.multiCloudManager.disasterRecovery.backupStrategy.secondary | default "scheduled" }}
          retention: {{ .Values.multiCloudManager.disasterRecovery.backupStrategy.retention | default "30d" }}
        replicationStrategy:
          type: {{ .Values.multiCloudManager.disasterRecovery.replicationStrategy.type | default "async" }}
          targets: {{ .Values.multiCloudManager.disasterRecovery.replicationStrategy.targets | default (list) | toYaml | nindent 12 }}
          encryption: {{ .Values.multiCloudManager.disasterRecovery.replicationStrategy.encryption | default true }}

      # Compliance and Governance
      compliance:
        enabled: {{ .Values.multiCloudManager.compliance.enabled | default true }}
        dataResidency:
          enforced: {{ .Values.multiCloudManager.compliance.dataResidency.enforced | default true }}
          allowedRegions: {{ .Values.multiCloudManager.compliance.dataResidency.allowedRegions | default (list "us-west-2" "eu-west-1") | toYaml | nindent 12 }}
          prohibitedRegions: {{ .Values.multiCloudManager.compliance.dataResidency.prohibitedRegions | default (list) | toYaml | nindent 12 }}
        encryption:
          enforced: {{ .Values.multiCloudManager.compliance.encryption.enforced | default true }}
          algorithms: {{ .Values.multiCloudManager.compliance.encryption.algorithms | default (list "AES-256-GCM" "ChaCha20-Poly1305") | toYaml | nindent 12 }}
          keyManagement:
            provider: {{ .Values.multiCloudManager.compliance.encryption.keyManagement.provider | default "hsm" }}
            rotation: {{ .Values.multiCloudManager.compliance.encryption.keyManagement.rotation | default "90d" }}

      # Monitoring and Observability
      monitoring:
        enabled: {{ .Values.multiCloudManager.monitoring.enabled | default true }}
        metrics:
          enabled: {{ .Values.multiCloudManager.monitoring.metrics.enabled | default true }}
          interval: {{ .Values.multiCloudManager.monitoring.metrics.interval | default "30s" }}
          retention: {{ .Values.multiCloudManager.monitoring.metrics.retention | default "30d" }}
        logging:
          enabled: {{ .Values.multiCloudManager.monitoring.logging.enabled | default true }}
          level: {{ .Values.multiCloudManager.monitoring.logging.level | default "info" }}
          format: {{ .Values.multiCloudManager.monitoring.logging.format | default "json" }}
        tracing:
          enabled: {{ .Values.multiCloudManager.monitoring.tracing.enabled | default true }}
          samplingRate: {{ .Values.multiCloudManager.monitoring.tracing.samplingRate | default 0.1 }}
        alerting:
          enabled: {{ .Values.multiCloudManager.monitoring.alerting.enabled | default true }}
          channels: {{ .Values.multiCloudManager.monitoring.alerting.channels | default (list "slack" "email") | toYaml | nindent 12 }}

      # Performance Optimization
      performance:
        enabled: {{ .Values.multiCloudManager.performance.enabled | default true }}
        loadBalancing:
          strategy: {{ .Values.multiCloudManager.performance.loadBalancing.strategy | default "geographic" }}
          healthCheckInterval: {{ .Values.multiCloudManager.performance.loadBalancing.healthCheckInterval | default "10s" }}
        caching:
          enabled: {{ .Values.multiCloudManager.performance.caching.enabled | default true }}
          ttl: {{ .Values.multiCloudManager.performance.caching.ttl | default "1h" }}
          maxSize: {{ .Values.multiCloudManager.performance.caching.maxSize | default "100MB" }}
        optimization:
          autoTuning: {{ .Values.multiCloudManager.performance.optimization.autoTuning | default true }}
          resourceAllocation:
            cpu: {{ .Values.multiCloudManager.performance.optimization.resourceAllocation.cpu | default "auto" }}
            memory: {{ .Values.multiCloudManager.performance.optimization.resourceAllocation.memory | default "auto" }}
            storage: {{ .Values.multiCloudManager.performance.optimization.resourceAllocation.storage | default "auto" }}

  policy.yaml: |
    # Multi-Cloud Certificate Management Policies
    policies:
      certificate:
        multiCloud:
          # Certificate Distribution Policies
          distribution:
            strategy: {{ .Values.multiCloudManager.policies.certificate.distribution.strategy | default "replicate-all" }}
            primaryCloud: {{ .Values.multiCloudManager.policies.certificate.distribution.primaryCloud | default "onpremise" }}
            replicationClouds: {{ .Values.multiCloudManager.policies.certificate.distribution.replicationClouds | default (list "aws" "azure" "gcp") | toYaml | nindent 14 }}
            consistency: {{ .Values.multiCloudManager.policies.certificate.distribution.consistency | default "eventual" }}
            
          # Certificate Lifecycle Management
          lifecycle:
            globalRenewal: {{ .Values.multiCloudManager.policies.certificate.lifecycle.globalRenewal | default true }}
            renewalThreshold: {{ .Values.multiCloudManager.policies.certificate.lifecycle.renewalThreshold | default "30d" }}
            autoRotation: {{ .Values.multiCloudManager.policies.certificate.lifecycle.autoRotation | default true }}
            rotationWindow: {{ .Values.multiCloudManager.policies.certificate.lifecycle.rotationWindow | default "24h" }}
            
          # Cross-Cloud Security Policies
          security:
            encryption:
              inTransit: {{ .Values.multiCloudManager.policies.certificate.security.encryption.inTransit | default true }}
              atRest: {{ .Values.multiCloudManager.policies.certificate.security.encryption.atRest | default true }}
              algorithm: {{ .Values.multiCloudManager.policies.certificate.security.encryption.algorithm | default "AES-256-GCM" }}
            authentication:
              mutualTLS: {{ .Values.multiCloudManager.policies.certificate.security.authentication.mutualTLS | default true }}
              cloudIdentity: {{ .Values.multiCloudManager.policies.certificate.security.authentication.cloudIdentity | default true }}
            authorization:
              rbac: {{ .Values.multiCloudManager.policies.certificate.security.authorization.rbac | default true }}
              crossCloudAccess: {{ .Values.multiCloudManager.policies.certificate.security.authorization.crossCloudAccess | default "restricted" }}

      # Data Governance Policies
      dataGovernance:
        residency:
          enforcement: {{ .Values.multiCloudManager.policies.dataGovernance.residency.enforcement | default "strict" }}
          allowedRegions: {{ .Values.multiCloudManager.policies.dataGovernance.residency.allowedRegions | default (list "us" "eu") | toYaml | nindent 12 }}
          dataClassification:
            sensitive: {{ .Values.multiCloudManager.policies.dataGovernance.residency.dataClassification.sensitive | default "onpremise-only" }}
            confidential: {{ .Values.multiCloudManager.policies.dataGovernance.residency.dataClassification.confidential | default "restricted-cloud" }}
            public: {{ .Values.multiCloudManager.policies.dataGovernance.residency.dataClassification.public | default "any-cloud" }}
        retention:
          defaultPeriod: {{ .Values.multiCloudManager.policies.dataGovernance.retention.defaultPeriod | default "7y" }}
          certificateData: {{ .Values.multiCloudManager.policies.dataGovernance.retention.certificateData | default "1y" }}
          auditLogs: {{ .Values.multiCloudManager.policies.dataGovernance.retention.auditLogs | default "7y" }}
          backups: {{ .Values.multiCloudManager.policies.dataGovernance.retention.backups | default "1y" }}

      # Compliance Policies
      compliance:
        frameworks:
          soc2: {{ .Values.multiCloudManager.policies.compliance.frameworks.soc2 | default true }}
          iso27001: {{ .Values.multiCloudManager.policies.compliance.frameworks.iso27001 | default true }}
          pcidss: {{ .Values.multiCloudManager.policies.compliance.frameworks.pcidss | default false }}
          hipaa: {{ .Values.multiCloudManager.policies.compliance.frameworks.hipaa | default false }}
          gdpr: {{ .Values.multiCloudManager.policies.compliance.frameworks.gdpr | default true }}
          ccpa: {{ .Values.multiCloudManager.policies.compliance.frameworks.ccpa | default false }}
        auditing:
          enabled: {{ .Values.multiCloudManager.policies.compliance.auditing.enabled | default true }}
          realTime: {{ .Values.multiCloudManager.policies.compliance.auditing.realTime | default true }}
          completeness: {{ .Values.multiCloudManager.policies.compliance.auditing.completeness | default "full" }}
          retention: {{ .Values.multiCloudManager.policies.compliance.auditing.retention | default "7y" }}

  network.yaml: |
    # Multi-Cloud Network Configuration
    network:
      crossCloud:
        # VPN Configuration
        vpn:
          enabled: {{ .Values.multiCloudManager.network.vpn.enabled | default true }}
          type: {{ .Values.multiCloudManager.network.vpn.type | default "site-to-site" }}
          encryption: {{ .Values.multiCloudManager.network.vpn.encryption | default "ipsec" }}
          protocols: {{ .Values.multiCloudManager.network.vpn.protocols | default (list "ikev2" "wireguard") | toYaml | nindent 12 }}
          
        # Direct Connect / ExpressRoute / Interconnect
        dedicatedConnection:
          enabled: {{ .Values.multiCloudManager.network.dedicatedConnection.enabled | default false }}
          aws:
            directConnect: {{ .Values.multiCloudManager.network.dedicatedConnection.aws.directConnect | default false }}
            bandwidth: {{ .Values.multiCloudManager.network.dedicatedConnection.aws.bandwidth | default "1Gbps" }}
          azure:
            expressRoute: {{ .Values.multiCloudManager.network.dedicatedConnection.azure.expressRoute | default false }}
            bandwidth: {{ .Values.multiCloudManager.network.dedicatedConnection.azure.bandwidth | default "1Gbps" }}
          gcp:
            interconnect: {{ .Values.multiCloudManager.network.dedicatedConnection.gcp.interconnect | default false }}
            bandwidth: {{ .Values.multiCloudManager.network.dedicatedConnection.gcp.bandwidth | default "1Gbps" }}
            
        # Software-Defined Networking
        sdn:
          enabled: {{ .Values.multiCloudManager.network.sdn.enabled | default true }}
          overlay:
            type: {{ .Values.multiCloudManager.network.sdn.overlay.type | default "vxlan" }}
            encapsulation: {{ .Values.multiCloudManager.network.sdn.overlay.encapsulation | default "udp" }}
          routing:
            protocol: {{ .Values.multiCloudManager.network.sdn.routing.protocol | default "bgp" }}
            mesh: {{ .Values.multiCloudManager.network.sdn.routing.mesh | default true }}

      # Service Mesh Configuration
      serviceMesh:
        enabled: {{ .Values.multiCloudManager.network.serviceMesh.enabled | default true }}
        type: {{ .Values.multiCloudManager.network.serviceMesh.type | default "istio" }}
        crossCluster:
          federation: {{ .Values.multiCloudManager.network.serviceMesh.crossCluster.federation | default true }}
          discovery: {{ .Values.multiCloudManager.network.serviceMesh.crossCluster.discovery | default "multicluster" }}
          security:
            mtls: {{ .Values.multiCloudManager.network.serviceMesh.crossCluster.security.mtls | default true }}
            rbac: {{ .Values.multiCloudManager.network.serviceMesh.crossCluster.security.rbac | default true }}

      # Load Balancing and Traffic Management
      trafficManagement:
        globalLoadBalancer:
          enabled: {{ .Values.multiCloudManager.network.trafficManagement.globalLoadBalancer.enabled | default true }}
          algorithm: {{ .Values.multiCloudManager.network.trafficManagement.globalLoadBalancer.algorithm | default "geographic" }}
          healthChecks:
            interval: {{ .Values.multiCloudManager.network.trafficManagement.globalLoadBalancer.healthChecks.interval | default "30s" }}
            timeout: {{ .Values.multiCloudManager.network.trafficManagement.globalLoadBalancer.healthChecks.timeout | default "10s" }}
            retries: {{ .Values.multiCloudManager.network.trafficManagement.globalLoadBalancer.healthChecks.retries | default 3 }}
        trafficSplitting:
          enabled: {{ .Values.multiCloudManager.network.trafficManagement.trafficSplitting.enabled | default true }}
          strategy: {{ .Values.multiCloudManager.network.trafficManagement.trafficSplitting.strategy | default "weighted" }}
          weights: {{ .Values.multiCloudManager.network.trafficManagement.trafficSplitting.weights | default (dict "onpremise" 70 "aws" 15 "azure" 10 "gcp" 5) | toYaml | nindent 12 }}

      # Network Security
      security:
        firewall:
          enabled: {{ .Values.multiCloudManager.network.security.firewall.enabled | default true }}
          type: {{ .Values.multiCloudManager.network.security.firewall.type | default "cloud-native" }}
          rules: {{ .Values.multiCloudManager.network.security.firewall.rules | default (list) | toYaml | nindent 12 }}
        ddosProtection:
          enabled: {{ .Values.multiCloudManager.network.security.ddosProtection.enabled | default true }}
          provider: {{ .Values.multiCloudManager.network.security.ddosProtection.provider | default "cloud-native" }}
        intrusion:
          detection: {{ .Values.multiCloudManager.network.security.intrusion.detection | default true }}
          prevention: {{ .Values.multiCloudManager.network.security.intrusion.prevention | default true }}