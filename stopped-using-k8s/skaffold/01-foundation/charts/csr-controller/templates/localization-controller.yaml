apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "csr-controller.fullname" . }}-localization-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: localization-controller
spec:
  replicas: {{ .Values.localizationController.replicas | default 2 }}
  selector:
    matchLabels:
      {{- include "csr-controller.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: localization-controller
  template:
    metadata:
      labels:
        {{- include "csr-controller.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: localization-controller
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/localization-config.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "csr-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.localizationController.podSecurityContext | nindent 8 }}
      containers:
      - name: localization-controller
        image: "{{ .Values.localizationController.image.repository }}:{{ .Values.localizationController.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.localizationController.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.localizationController.securityContext | nindent 10 }}
        env:
        - name: LOCALIZATION_ENABLED
          value: {{ .Values.localizationController.enabled | default "true" | quote }}
        - name: GEOGRAPHIC_LOCALIZATION_ENABLED
          value: {{ .Values.localizationController.geographic.enabled | default "true" | quote }}
        - name: LANGUAGE_LOCALIZATION_ENABLED
          value: {{ .Values.localizationController.language.enabled | default "true" | quote }}
        - name: CULTURAL_LOCALIZATION_ENABLED
          value: {{ .Values.localizationController.cultural.enabled | default "true" | quote }}
        - name: TEMPORAL_LOCALIZATION_ENABLED
          value: {{ .Values.localizationController.temporal.enabled | default "true" | quote }}
        - name: COMPLIANCE_LOCALIZATION_ENABLED
          value: {{ .Values.localizationController.compliance.enabled | default "true" | quote }}
        - name: DEFAULT_LANGUAGE
          value: {{ .Values.localizationController.language.defaultLanguage | default "en" }}
        - name: DEFAULT_TIMEZONE
          value: {{ .Values.localizationController.temporal.defaultTimeZone | default "UTC" }}
        - name: LOG_LEVEL
          value: {{ .Values.localizationController.logLevel | default "info" }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: grpc
          containerPort: 9091
          protocol: TCP
        - name: translation-api
          containerPort: 8081
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.localizationController.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/localization-controller
          readOnly: true
        - name: language-data
          mountPath: /var/lib/localization/languages
          readOnly: true
        - name: cultural-data
          mountPath: /var/lib/localization/cultural
          readOnly: true
        - name: geoip-data
          mountPath: /var/lib/localization/geoip
          readOnly: true
        - name: timezone-data
          mountPath: /var/lib/localization/timezone
          readOnly: true
        - name: translation-cache
          mountPath: /var/cache/translations
        - name: tls-certs
          mountPath: /etc/ssl/certs
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: {{ include "csr-controller.fullname" . }}-localization-config
      - name: language-data
        configMap:
          name: {{ include "csr-controller.fullname" . }}-language-data
      - name: cultural-data
        configMap:
          name: {{ include "csr-controller.fullname" . }}-cultural-data
      - name: geoip-data
        configMap:
          name: {{ include "csr-controller.fullname" . }}-geoip-data
      - name: timezone-data
        configMap:
          name: {{ include "csr-controller.fullname" . }}-timezone-data
      - name: translation-cache
        emptyDir:
          sizeLimit: {{ .Values.localizationController.translationCache.sizeLimit | default "1Gi" }}
      - name: tls-certs
        projected:
          sources:
          - secret:
              name: {{ include "csr-controller.fullname" . }}-tls-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
      {{- with .Values.localizationController.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.localizationController.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.localizationController.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "csr-controller.fullname" . }}-localization-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: localization-controller
spec:
  type: {{ .Values.localizationController.service.type | default "ClusterIP" }}
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  - port: 9091
    targetPort: grpc
    protocol: TCP
    name: grpc
  - port: 8081
    targetPort: translation-api
    protocol: TCP
    name: translation-api
  selector:
    {{- include "csr-controller.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: localization-controller

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "csr-controller.fullname" . }}-translation-engine
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: translation-engine
spec:
  replicas: {{ .Values.localizationController.translationEngine.replicas | default 2 }}
  selector:
    matchLabels:
      {{- include "csr-controller.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: translation-engine
  template:
    metadata:
      labels:
        {{- include "csr-controller.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: translation-engine
    spec:
      serviceAccountName: {{ include "csr-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.localizationController.translationEngine.podSecurityContext | nindent 8 }}
      containers:
      - name: translation-engine
        image: "{{ .Values.localizationController.translationEngine.image.repository }}:{{ .Values.localizationController.translationEngine.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.localizationController.translationEngine.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.localizationController.translationEngine.securityContext | nindent 10 }}
        env:
        - name: TRANSLATION_ENGINE_TYPE
          value: {{ .Values.localizationController.translationEngine.type | default "neural" }}
        - name: SUPPORTED_LANGUAGES
          value: {{ join "," (.Values.localizationController.language.supportedLanguages | default (list "en" "ja" "ko" "zh" "de" "fr" "es")) }}
        - name: DEFAULT_LANGUAGE
          value: {{ .Values.localizationController.language.defaultLanguage | default "en" }}
        - name: CACHE_ENABLED
          value: {{ .Values.localizationController.translationEngine.cache.enabled | default "true" | quote }}
        - name: REAL_TIME_TRANSLATION
          value: {{ .Values.localizationController.translationEngine.realTime | default "true" | quote }}
        - name: AI_TRANSLATION_ENABLED
          value: {{ .Values.localizationController.translationEngine.aiTranslation.enabled | default "true" | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.localizationController.translationEngine.logLevel | default "info" }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 9091
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.localizationController.translationEngine.resources | nindent 10 }}
        volumeMounts:
        - name: translation-models
          mountPath: /var/lib/translation/models
          readOnly: true
        - name: translation-cache
          mountPath: /var/cache/translations
        - name: translation-config
          mountPath: /etc/translation-engine
          readOnly: true
      volumes:
      - name: translation-models
        configMap:
          name: {{ include "csr-controller.fullname" . }}-translation-models
      - name: translation-cache
        emptyDir:
          sizeLimit: {{ .Values.localizationController.translationEngine.cache.sizeLimit | default "2Gi" }}
      - name: translation-config
        configMap:
          name: {{ include "csr-controller.fullname" . }}-translation-config
      {{- with .Values.localizationController.translationEngine.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.localizationController.translationEngine.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.localizationController.translationEngine.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "csr-controller.fullname" . }}-translation-engine
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: translation-engine
spec:
  type: {{ .Values.localizationController.translationEngine.service.type | default "ClusterIP" }}
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  - port: 9091
    targetPort: grpc
    protocol: TCP
    name: grpc
  selector:
    {{- include "csr-controller.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: translation-engine

---
{{- if .Values.localizationController.horizontalPodAutoscaler.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "csr-controller.fullname" . }}-localization-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: localization-controller
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "csr-controller.fullname" . }}-localization-controller
  minReplicas: {{ .Values.localizationController.horizontalPodAutoscaler.minReplicas | default 2 }}
  maxReplicas: {{ .Values.localizationController.horizontalPodAutoscaler.maxReplicas | default 10 }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.localizationController.horizontalPodAutoscaler.targetCPUUtilizationPercentage | default 70 }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.localizationController.horizontalPodAutoscaler.targetMemoryUtilizationPercentage | default 80 }}
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 60
{{- end }}

---
{{- if .Values.localizationController.translationEngine.horizontalPodAutoscaler.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "csr-controller.fullname" . }}-translation-engine
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: translation-engine
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "csr-controller.fullname" . }}-translation-engine
  minReplicas: {{ .Values.localizationController.translationEngine.horizontalPodAutoscaler.minReplicas | default 2 }}
  maxReplicas: {{ .Values.localizationController.translationEngine.horizontalPodAutoscaler.maxReplicas | default 15 }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.localizationController.translationEngine.horizontalPodAutoscaler.targetCPUUtilizationPercentage | default 80 }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.localizationController.translationEngine.horizontalPodAutoscaler.targetMemoryUtilizationPercentage | default 85 }}
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 30
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 200
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 60
{{- end }}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "csr-controller.fullname" . }}-localization-data-sync
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: localization-data-sync
spec:
  schedule: {{ .Values.localizationController.dataSync.schedule | default "0 2 * * *" | quote }}
  concurrencyPolicy: {{ .Values.localizationController.dataSync.concurrencyPolicy | default "Forbid" }}
  successfulJobsHistoryLimit: {{ .Values.localizationController.dataSync.successfulJobsHistoryLimit | default 3 }}
  failedJobsHistoryLimit: {{ .Values.localizationController.dataSync.failedJobsHistoryLimit | default 1 }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "csr-controller.selectorLabels" . | nindent 12 }}
            app.kubernetes.io/component: localization-data-sync
        spec:
          serviceAccountName: {{ include "csr-controller.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.localizationController.dataSync.podSecurityContext | nindent 12 }}
          restartPolicy: OnFailure
          containers:
          - name: data-sync
            image: "{{ .Values.localizationController.dataSync.image.repository }}:{{ .Values.localizationController.dataSync.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.localizationController.dataSync.image.pullPolicy }}
            securityContext:
              {{- toYaml .Values.localizationController.dataSync.securityContext | nindent 14 }}
            env:
            - name: SYNC_TYPE
              value: {{ .Values.localizationController.dataSync.type | default "full" }}
            - name: DATA_SOURCES
              value: {{ join "," (.Values.localizationController.dataSync.sources | default (list "geoip" "timezone" "language" "cultural")) }}
            - name: LOG_LEVEL
              value: {{ .Values.localizationController.dataSync.logLevel | default "info" }}
            resources:
              {{- toYaml .Values.localizationController.dataSync.resources | nindent 14 }}
            volumeMounts:
            - name: sync-config
              mountPath: /etc/data-sync
              readOnly: true
            - name: data-storage
              mountPath: /var/lib/localization-data
            command:
            - /bin/sh
            - -c
            - |
              echo "Starting localization data synchronization..."
              
              # Update GeoIP databases
              if echo "$DATA_SOURCES" | grep -q "geoip"; then
                echo "Updating GeoIP databases..."
                /usr/local/bin/data-sync geoip \
                  --config=/etc/data-sync/geoip.yaml \
                  --output=/var/lib/localization-data/geoip
              fi
              
              # Update timezone data
              if echo "$DATA_SOURCES" | grep -q "timezone"; then
                echo "Updating timezone data..."
                /usr/local/bin/data-sync timezone \
                  --config=/etc/data-sync/timezone.yaml \
                  --output=/var/lib/localization-data/timezone
              fi
              
              # Update language data
              if echo "$DATA_SOURCES" | grep -q "language"; then
                echo "Updating language data..."
                /usr/local/bin/data-sync language \
                  --config=/etc/data-sync/language.yaml \
                  --output=/var/lib/localization-data/language
              fi
              
              # Update cultural data
              if echo "$DATA_SOURCES" | grep -q "cultural"; then
                echo "Updating cultural data..."
                /usr/local/bin/data-sync cultural \
                  --config=/etc/data-sync/cultural.yaml \
                  --output=/var/lib/localization-data/cultural
              fi
              
              echo "Localization data synchronization completed"
          volumes:
          - name: sync-config
            configMap:
              name: {{ include "csr-controller.fullname" . }}-localization-config
          - name: data-storage
            persistentVolumeClaim:
              claimName: {{ include "csr-controller.fullname" . }}-localization-data-pvc