# Default values for kratos
# This is a YAML-formatted file.

# Image configuration - ÂÖ¨Âºè„Éë„Çø„Éº„É≥Ê∫ñÊã†: „Éê„Éº„Ç∏„Éß„É≥Áµ±‰∏Ä
image:
  repository: oryd/kratos
  tag: "v1.3.1"  # Migration image„Å®Áµ±‰∏Ä
  pullPolicy: IfNotPresent

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Number of replicas
replicaCount: 1

# Namespace configuration
namespace: alt-auth

# Pod annotations - üö® CRITICAL: Linkerd injection optimization
podAnnotations:
  linkerd.io/inject: enabled
  config.linkerd.io/proxy-inbound-connect-timeout: 30000ms
  config.linkerd.io/proxy-outbound-connect-timeout: 30000ms
  config.linkerd.io/proxy-protocol-detection-timeout: 0s
  config.linkerd.io/skip-outbound-ports: "5432"  # Skip postgres port
  config.linkerd.io/opaque-ports: "4433,4434"  # memo.md Phase 4: TCP direct for Kratos

# Resource configuration
resources:
  requests:
    memory: "128Mi"
    cpu: "100m"
  limits:
    memory: "256Mi"
    cpu: "250m"

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
  seccompProfile:
    type: RuntimeDefault

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  fsGroup: 10001
  seccompProfile:
    type: RuntimeDefault

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Services configuration
services:
  public:
    type: ClusterIP
    port: 4433
    targetPort: 4433
    annotations: {}
  admin:
    type: ClusterIP
    port: 4434
    targetPort: 4434
    annotations: {}

# Kratos configuration
kratos:
  # Development configuration
  dev: true
  
  # Base URLs (will be templated for different environments)
  publicUrl: "https://id.curionoah.com"
  adminUrl: "http://kratos-admin.{{ .Values.namespace }}.svc.cluster.local:4434/"
  
  # Frontend URLs
  frontendUrl: "https://curionoah.com"
  
  # Self-service configuration
  selfservice:
    methods:
      password:
        enabled: true
        haveibeenpwned_enabled: true
        max_breaches: 0
        ignore_network_errors: true
      totp:
        enabled: true
        issuer: "Alt RSS Reader"
      lookup_secret:
        enabled: true
      link:
        enabled: true
        lifespan: "1h"
      code:
        enabled: true
        lifespan: "15m"
    
    flows:
      login:
        lifespan: "10m"
      registration:
        lifespan: "10m"
      recovery:
        enabled: true
        use: "code"
      verification:
        enabled: true
        use: "code"
      settings:
        privileged_session_max_age: "15m"
        required_aal: "highest_available"
  
  # Session configuration - Production ready values
  session:
    lifespan: "24h"
    cookie:
      persistent: true
      same_site: "Lax"
      domain: "curionoah.com"   # Ë¶™„Éâ„É°„Ç§„É≥ÔºàÂÖàÈ†≠„Éâ„ÉÉ„Éà‰∏çË¶ÅÔºâ
      path: "/"
      secure: true              # HTTPS required for production
      http_only: true          # Security best practice
  
  # CORS configuration
  cors:
    enabled: true
    allowed_origins:
      - "https://curionoah.com"
      - "https://id.curionoah.com"
    allowed_methods:
      - "POST"
      - "GET"
      - "PUT"
      - "PATCH"
      - "DELETE"
    allowed_headers:
      - "Authorization"
      - "Content-Type"
      - "Cookie"
    exposed_headers:
      - "Content-Type"
      - "Set-Cookie"
    allow_credentials: true
    debug: false
  
  # Courier configuration (email)
  courier:
    smtp:
      connection_uri: "smtps://test:test@mailslurper:1025/?skip_ssl_verify=true"
      from_address: "noreply@alt.local"
      from_name: "Alt RSS Reader"
  
  # Hash configuration
  hashers:
    algorithm: "bcrypt"
    bcrypt:
      cost: 12
  
  # Cipher configuration
  ciphers:
    algorithm: "xchacha20-poly1305"
  
  # Log configuration
  log:
    level: "info"
    format: "json"
    leak_sensitive_values: false

# Identity schema configuration
identitySchema:
  default:
    id: "default"
    url: "file:///etc/config/kratos/schemas/identity.schema.json"

# Health check configuration - üö® OPTIMIZED for Linkerd stability
healthCheck:
  startupProbe:
    httpGet:
      path: /health/alive
      port: 4434
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30  # Allow 5 minutes for startup
  livenessProbe:
    httpGet:
      path: /health/alive
      port: 4434
    initialDelaySeconds: 120  # Wait for startup to complete
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /health/ready
      port: 4434
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 5

# Migration configuration - ÂÖ¨Âºè„Éë„Çø„Éº„É≥ÂÆüË£Ö: Official Ory automigration
automigration:
  enabled: true  # ÂÖ¨ÂºèÊé®Â•®: Ëá™Âãï„Éû„Ç§„Ç∞„É¨„Éº„Ç∑„Éß„É≥ÊúâÂäπÂåñ
  type: job      # ÂÖ¨ÂºèÊé®Â•®: Kubernetes JobÂΩ¢Âºè„ÅßÂÆüË°å
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  env:
    - name: KRATOS_LOG_LEVEL
      value: "debug"
    - name: KRATOS_DATABASE_TIMEOUT
      value: "60s"
    - name: KRATOS_DATABASE_MAX_OPEN_CONNS
      value: "1"
        
# Legacy migration configuration (deprecated)
migration:
  enabled: false  # ÂÖ¨Âºè„Éë„Çø„Éº„É≥„Å´ÁßªË°å: ÊâãÂãïJobÁÑ°ÂäπÂåñ
  manualJob: false  # ÂÖ¨Âºèautomigration„Å´ÁßªË°å
  image:
    repository: oryd/kratos
    tag: "v1.3.1"  # ‚úÖ „É°„Ç§„É≥„Ç§„É°„Éº„Ç∏„Å®Áµ±‰∏Ä

# Database configuration (connects to kratos-postgres chart)
database:
  enabled: true
  host: "kratos-postgres"
  port: 5434
  database: "kratos_db"
  username: "kratos_user"
  ssl_mode: "require"
  max_conns: 20
  max_idle_conns: 4

# PostgreSQL configuration for DSN generation
# SECURITY: Actual credentials are defined in values-production.yaml
postgresql:
  enabled: true
  auth:
    username: ""  # Set in values-production.yaml
    password: ""  # Set in values-production.yaml
    database: "kratos_db"
  service:
    name: "kratos-postgres.alt-auth.svc.cluster.local"
    port: 5432
  sslmode: "require"
  # ÊÅí‰πÖÂØæÂøú: ÂÆüÈöõ„Å´Â≠òÂú®„Åô„Çã„Ç∑„Éº„ÇØ„É¨„ÉÉ„ÉàÂêç„ÇíÊåáÂÆö
  credentialsSecretName: "kratos-postgres-secrets"

# Secrets configuration
secrets:
  enabled: true
  # For development - will be overridden in production values-production.yaml
  cookieSecret: "youReallyNeedToChangeThis-DEV-ONLY"
  cipherSecret: "32-LONG-SECRET-NOT-SECURE-AT-ALL-DEV"

# SSL configuration
ssl:
  enabled: false
  secretName: "kratos-ssl-certs"

# Init containers configuration
initContainers:
  enabled: false

# Monitoring configuration
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    namespace: ""
    interval: "30s"
    scrapeTimeout: "10s"

# Network policy configuration
networkPolicy:
  enabled: false
  ingress: []
  egress: []

# Istio configuration
istio:
  enabled: false