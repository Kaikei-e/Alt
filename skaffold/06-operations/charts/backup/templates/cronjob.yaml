apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "backup.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "backup.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  schedule: {{ .Values.schedule | quote }}
  timeZone: {{ .Values.timeZone | default "UTC" }}
  concurrencyPolicy: {{ .Values.concurrencyPolicy | default "Forbid" }}
  startingDeadlineSeconds: {{ .Values.startingDeadlineSeconds | default 3600 }}
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit | default 3 }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit | default 1 }}
  jobTemplate:
    spec:
      template:
        metadata:
          {{- with .Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "backup.labels" . | nindent 12 }}
            {{- with .Values.podLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          restartPolicy: {{ .Values.restartPolicy | default "OnFailure" }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "backup.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              env:
                {{- range $key, $value := .Values.env }}
                - name: {{ $key }}
                  value: {{ $value | quote }}
                {{- end }}
                {{- if .Values.envFromSecret }}
                {{- range .Values.envFromSecret.keys }}
                - name: {{ . }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ $.Values.envFromSecret.name }}
                      key: {{ . }}
                {{- end }}
                {{- end }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              volumeMounts:
                {{- if .Values.configMap.create }}
                - name: config
                  mountPath: /app/config
                {{- end }}
                {{- with .Values.volumeMounts }}
                {{- toYaml . | nindent 16 }}
                {{- end }}
          volumes:
            {{- if .Values.configMap.create }}
            - name: config
              configMap:
                name: {{ .Values.configMap.name }}
            {{- end }}
            {{- with .Values.volumes }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}