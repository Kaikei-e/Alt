# Default values for alt-backend
# Alt Backend API service configuration

# Replica configuration
replicaCount: 1

# Image configuration
image:
  repository: alt-backend
  pullPolicy: IfNotPresent
  tag: "production"

# Image pull secrets
imagePullSecrets: []

# Service account
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Pod annotations and labels
podAnnotations:
  kompose.cmd: "kompose convert -f compose.yaml --out ./k8s-manifests/"
  kompose.version: "1.36.0 (ae2a39403)"
  rask.group: "alt-backend"

podLabels:
  io.kompose.service: "alt-backend"

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

# Container security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false  # Alt-backend needs to write logs
  capabilities:
    drop:
      - ALL
  seccompProfile:
    type: RuntimeDefault

# Service configuration
service:
  type: ClusterIP
  port: 9000
  targetPort: 9000
  protocol: TCP
  ports:
    metrics:
      name: metrics
      port: 9001
      targetPort: 9001
      protocol: TCP

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: alt-backend.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Resources configuration
resources:
  limits:
    cpu: "4"
    memory: "2Gi"
  requests:
    cpu: "2"
    memory: "1Gi"

# Liveness probe
livenessProbe:
  httpGet:
    path: /v1/health
    port: 9000
  failureThreshold: 5
  initialDelaySeconds: 60
  periodSeconds: 20
  timeoutSeconds: 10

# Readiness probe
readinessProbe:
  httpGet:
    path: /v1/health
    port: 9000
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes - INCIDENT 46 FIX: SSL証明書volume条件付き設定
volumes: []
# SSL有効時のみssl-certsボリューム追加（values-ssl.yamlで上書き）

# Additional volume mounts - INCIDENT 46 FIX: SSL証明書mount条件付き設定  
volumeMounts: []
# SSL有効時のみssl-certsマウント追加（values-ssl.yamlで上書き）

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Environment variables
env:
  # Database configuration
  DB_HOST: "db.alt-database.svc.cluster.local"
  DB_NAME: "alt"
  DB_PORT: "5432"
  DB_USER: "alt_db_user"
  DB_SSL_MODE: "require"

# Secret references for environment variables
envFromSecret:
  name: backend-secrets
  keys:
    - DB_PASSWORD
    - POSTGRES_PASSWORD
    - DB_APP_PASSWORD
    - HF_TOKEN
    - MEILI_MASTER_KEY
    - MEILISEARCH_API_KEY
    - PRE_PROCESSOR_DB_PASSWORD
    - DB_TAG_GENERATOR_PASSWORD
    - SEARCH_INDEXER_DB_PASSWORD
    - CLICKHOUSE_PASSWORD
    - APP_CLICKHOUSE_PASSWORD

# ConfigMap configuration
configMap:
  create: true
  name: alt-backend-config
  data:
    .env: |
      # Alt Backend Configuration
      PORT=9000
      LOG_LEVEL=info
      DB_MAX_CONNECTIONS=25
      DB_MAX_IDLE_CONNECTIONS=5
      DB_CONNECTION_MAX_LIFETIME=5m
      CORS_ALLOWED_ORIGINS=*
      RATE_LIMIT_REQUESTS_PER_SECOND=100
      RATE_LIMIT_BURST=200

# SSL configuration
ssl:
  enabled: true
  secretName: postgres-ssl-secret

# Secrets configuration
secrets:
  enabled: true

# Deployment strategy
strategy:
  type: Recreate

# Common labels - avoid duplicating labels already in _helpers.tpl
commonLabels: {}

# Common annotations
commonAnnotations: {}

# Monitoring configuration
monitoring:
  enabled: false  # Disabled until Prometheus operator is installed
  metricsPath: "/metrics"
  scrapeInterval: 30s
  scrapeTimeout: 10s

  # Prometheus annotations
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9001"
    prometheus.io/path: "/metrics"