{{/*
PHASE 2 CHART TEMPLATE IMPROVEMENT: Conditional Secret Creation
Only create database secrets if:
1. Not using existing secrets (existingSecrets.enabled is false)
2. Database secret creation is enabled (createSecrets.database is true)
3. The specific database is enabled (e.g., database.postgres.enabled)
*/}}
{{- if and (not .Values.existingSecrets.enabled) (.Values.createSecrets.database) (.Values.database.postgres.enabled) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.database.postgres.secretName }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "common-secrets.labels" . | nindent 4 }}
    app.kubernetes.io/component: database-postgres
    # PHASE 2: Add Helm ownership metadata by default
    app.kubernetes.io/managed-by: Helm
  annotations:
    # PHASE 2: Add Helm release metadata by default
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    {{- with .Values.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data:
  POSTGRES_PASSWORD: {{ .Values.database.postgres.password | quote }}
  DB_PASSWORD: {{ .Values.database.postgres.password | quote }}
  DB_APP_PASSWORD: {{ .Values.database.postgres.appPassword | quote }}
{{- else if .Values.existingSecrets.enabled }}
{{/*
PHASE 2: When using existing secrets, add a comment for reference
This helps with debugging and understanding the configuration
*/}}
# Postgres database secret: Using existing secret "{{ .Values.existingSecrets.secretName }}"
# Secret creation skipped due to existingSecrets.enabled=true
{{- end }}

{{- if and (not .Values.existingSecrets.enabled) (.Values.createSecrets.database) (.Values.database.authPostgres.enabled) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.database.authPostgres.secretName }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "common-secrets.labels" . | nindent 4 }}
    app.kubernetes.io/component: database-auth-postgres
    # PHASE 2: Add Helm ownership metadata by default
    app.kubernetes.io/managed-by: Helm
  annotations:
    # PHASE 2: Add Helm release metadata by default
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    {{- with .Values.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data:
  POSTGRES_PASSWORD: {{ .Values.database.authPostgres.password | quote }}
{{- else if .Values.existingSecrets.enabled }}
# Auth-Postgres database secret: Using existing secret "{{ .Values.existingSecrets.secretName }}"
# Secret creation skipped due to existingSecrets.enabled=true
{{- end }}

{{- if and (not .Values.existingSecrets.enabled) (.Values.createSecrets.database) (.Values.database.kratosPostgres.enabled) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.database.kratosPostgres.secretName }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "common-secrets.labels" . | nindent 4 }}
    app.kubernetes.io/component: database-kratos-postgres
    # PHASE 2: Add Helm ownership metadata by default
    app.kubernetes.io/managed-by: Helm
  annotations:
    # PHASE 2: Add Helm release metadata by default
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    {{- with .Values.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data:
  POSTGRES_PASSWORD: {{ .Values.database.kratosPostgres.password | quote }}
{{- else if .Values.existingSecrets.enabled }}
# Kratos-Postgres database secret: Using existing secret "{{ .Values.existingSecrets.secretName }}"
# Secret creation skipped due to existingSecrets.enabled=true
{{- end }}

{{- if and (not .Values.existingSecrets.enabled) (.Values.createSecrets.database) (.Values.database.clickhouse.enabled) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.database.clickhouse.secretName }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "common-secrets.labels" . | nindent 4 }}
    app.kubernetes.io/component: database-clickhouse
    # PHASE 2: Add Helm ownership metadata by default
    app.kubernetes.io/managed-by: Helm
  annotations:
    # PHASE 2: Add Helm release metadata by default
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    {{- with .Values.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data:
  CLICKHOUSE_PASSWORD: {{ .Values.database.clickhouse.password | quote }}
  APP_CLICKHOUSE_PASSWORD: {{ .Values.database.clickhouse.appPassword | quote }}
{{- else if .Values.existingSecrets.enabled }}
# ClickHouse database secret: Using existing secret "{{ .Values.existingSecrets.secretName }}"
# Secret creation skipped due to existingSecrets.enabled=true
{{- end }}