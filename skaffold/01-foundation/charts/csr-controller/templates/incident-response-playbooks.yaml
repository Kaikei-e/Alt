apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "csr-controller.fullname" . }}-incident-response-playbooks
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: automated-incident-response
data:
  malware-response-playbook.yaml: |
    # Malware Response Playbook
    name: "malware_response"
    version: "1.0"
    description: "Automated response playbook for malware incidents"
    
    # Playbook Metadata
    metadata:
      category: "security"
      severity: "high"
      estimated_duration: "2h"
      required_approvals: false
      automation_level: "high"
      
    # Playbook Variables
    variables:
      - name: "affected_hosts"
        type: "list"
        description: "List of hosts affected by malware"
        required: true
        
      - name: "malware_type"
        type: "string"
        description: "Type of malware detected"
        required: true
        
      - name: "malware_hash"
        type: "string"
        description: "Hash of the malware sample"
        required: false
        
      - name: "c2_servers"
        type: "list"
        description: "Command and control servers"
        required: false
        
      - name: "isolation_required"
        type: "boolean"
        description: "Whether host isolation is required"
        default: true
    
    # Playbook Steps
    steps:
      - name: "immediate_containment"
        description: "Immediate containment of malware spread"
        type: "containment"
        timeout: "5m"
        parallel: true
        actions:
          - name: "isolate_affected_hosts"
            type: "network_isolation"
            parameters:
              hosts: "{{ affected_hosts }}"
              isolation_type: "full"
              exceptions: ["monitoring", "management"]
            validation:
              - "ping_test_fails"
              - "network_isolation_confirmed"
              
          - name: "block_c2_communications"
            type: "network_blocking"
            parameters:
              destinations: "{{ c2_servers }}"
              block_type: "firewall_rule"
              scope: "organization_wide"
            validation:
              - "firewall_rule_created"
              - "traffic_blocked"
              
          - name: "alert_security_team"
            type: "notification"
            parameters:
              channels: ["slack", "email"]
              urgency: "high"
              message: "Malware detected: {{ malware_type }} on {{ affected_hosts | length }} hosts"
            validation:
              - "notification_sent"
              - "acknowledgment_received"
      
      - name: "evidence_collection"
        description: "Collect evidence for analysis"
        type: "evidence_collection"
        timeout: "15m"
        dependencies: ["immediate_containment"]
        actions:
          - name: "collect_malware_samples"
            type: "file_collection"
            parameters:
              hosts: "{{ affected_hosts }}"
              file_paths: ["suspicious_files", "malware_locations"]
              preservation_method: "forensic_copy"
            validation:
              - "samples_collected"
              - "chain_of_custody_maintained"
              
          - name: "collect_system_state"
            type: "system_snapshot"
            parameters:
              hosts: "{{ affected_hosts }}"
              snapshot_type: "memory_dump"
              include_registry: true
              include_processes: true
            validation:
              - "memory_dump_created"
              - "system_state_captured"
              
          - name: "collect_network_traffic"
            type: "network_capture"
            parameters:
              hosts: "{{ affected_hosts }}"
              capture_duration: "30m"
              capture_filter: "malware_related"
            validation:
              - "traffic_captured"
              - "pcap_files_created"
      
      - name: "malware_analysis"
        description: "Analyze collected malware samples"
        type: "analysis"
        timeout: "45m"
        dependencies: ["evidence_collection"]
        actions:
          - name: "static_analysis"
            type: "malware_analysis"
            parameters:
              samples: "{{ collected_samples }}"
              analysis_type: "static"
              include_strings: true
              include_imports: true
              include_metadata: true
            validation:
              - "static_analysis_complete"
              - "iocs_extracted"
              
          - name: "dynamic_analysis"
            type: "sandbox_analysis"
            parameters:
              samples: "{{ collected_samples }}"
              sandbox_type: "isolated"
              analysis_duration: "30m"
              behavior_monitoring: true
            validation:
              - "dynamic_analysis_complete"
              - "behavior_report_generated"
              
          - name: "threat_intelligence_lookup"
            type: "threat_intel"
            parameters:
              indicators: "{{ extracted_iocs }}"
              sources: ["virustotal", "hybrid_analysis", "internal_ti"]
              enrichment: true
            validation:
              - "threat_intel_enriched"
              - "attribution_assessed"
      
      - name: "impact_assessment"
        description: "Assess the impact of malware infection"
        type: "assessment"
        timeout: "20m"
        dependencies: ["malware_analysis"]
        actions:
          - name: "assess_data_compromise"
            type: "data_assessment"
            parameters:
              affected_hosts: "{{ affected_hosts }}"
              data_types: ["sensitive", "confidential", "regulated"]
              assessment_method: "file_access_audit"
            validation:
              - "data_assessment_complete"
              - "compromise_scope_identified"
              
          - name: "assess_system_integrity"
            type: "integrity_check"
            parameters:
              hosts: "{{ affected_hosts }}"
              check_type: "comprehensive"
              baseline_comparison: true
            validation:
              - "integrity_check_complete"
              - "compromised_files_identified"
              
          - name: "assess_lateral_movement"
            type: "lateral_movement_analysis"
            parameters:
              source_hosts: "{{ affected_hosts }}"
              analysis_period: "7d"
              indicators: "{{ extracted_iocs }}"
            validation:
              - "lateral_movement_analyzed"
              - "additional_compromises_identified"
      
      - name: "malware_removal"
        description: "Remove malware from affected systems"
        type: "remediation"
        timeout: "30m"
        dependencies: ["impact_assessment"]
        actions:
          - name: "terminate_malicious_processes"
            type: "process_termination"
            parameters:
              hosts: "{{ affected_hosts }}"
              processes: "{{ malicious_processes }}"
              force_kill: true
            validation:
              - "processes_terminated"
              - "no_malicious_processes_running"
              
          - name: "remove_malicious_files"
            type: "file_removal"
            parameters:
              hosts: "{{ affected_hosts }}"
              files: "{{ malicious_files }}"
              secure_deletion: true
            validation:
              - "files_removed"
              - "secure_deletion_verified"
              
          - name: "clean_registry_entries"
            type: "registry_cleanup"
            parameters:
              hosts: "{{ affected_hosts }}"
              registry_keys: "{{ malicious_registry_keys }}"
              backup_before_removal: true
            validation:
              - "registry_cleaned"
              - "backup_created"
              
          - name: "remove_persistence_mechanisms"
            type: "persistence_removal"
            parameters:
              hosts: "{{ affected_hosts }}"
              persistence_types: ["services", "scheduled_tasks", "startup_items"]
            validation:
              - "persistence_removed"
              - "no_malicious_persistence"
      
      - name: "system_hardening"
        description: "Harden systems against future attacks"
        type: "hardening"
        timeout: "25m"
        dependencies: ["malware_removal"]
        actions:
          - name: "update_antivirus_definitions"
            type: "av_update"
            parameters:
              hosts: "{{ affected_hosts }}"
              update_type: "full"
              force_update: true
            validation:
              - "av_definitions_updated"
              - "new_signatures_installed"
              
          - name: "apply_security_patches"
            type: "patch_management"
            parameters:
              hosts: "{{ affected_hosts }}"
              patch_type: "security"
              priority: "critical"
            validation:
              - "patches_applied"
              - "systems_rebooted"
              
          - name: "configure_host_firewall"
            type: "firewall_configuration"
            parameters:
              hosts: "{{ affected_hosts }}"
              rules: "{{ hardening_rules }}"
              default_policy: "deny"
            validation:
              - "firewall_configured"
              - "rules_activated"
              
          - name: "enable_enhanced_logging"
            type: "logging_configuration"
            parameters:
              hosts: "{{ affected_hosts }}"
              log_level: "detailed"
              log_destinations: ["siem", "local"]
            validation:
              - "logging_enabled"
              - "log_forwarding_verified"
      
      - name: "monitoring_enhancement"
        description: "Enhance monitoring for affected systems"
        type: "monitoring"
        timeout: "15m"
        dependencies: ["system_hardening"]
        actions:
          - name: "deploy_additional_sensors"
            type: "sensor_deployment"
            parameters:
              hosts: "{{ affected_hosts }}"
              sensor_types: ["edr", "network_monitor", "file_integrity"]
            validation:
              - "sensors_deployed"
              - "monitoring_active"
              
          - name: "configure_behavioral_monitoring"
            type: "behavioral_monitoring"
            parameters:
              hosts: "{{ affected_hosts }}"
              monitoring_type: "enhanced"
              baseline_period: "7d"
            validation:
              - "behavioral_monitoring_configured"
              - "baseline_established"
              
          - name: "setup_threat_hunting_queries"
            type: "threat_hunting"
            parameters:
              scope: "{{ affected_hosts }}"
              query_types: ["malware_persistence", "lateral_movement", "data_exfiltration"]
              frequency: "hourly"
            validation:
              - "hunting_queries_configured"
              - "automated_hunting_active"
      
      - name: "system_restoration"
        description: "Restore systems to normal operations"
        type: "restoration"
        timeout: "20m"
        dependencies: ["monitoring_enhancement"]
        actions:
          - name: "restore_network_connectivity"
            type: "network_restoration"
            parameters:
              hosts: "{{ affected_hosts }}"
              connectivity_type: "gradual"
              monitoring_required: true
            validation:
              - "network_restored"
              - "connectivity_verified"
              
          - name: "restore_system_services"
            type: "service_restoration"
            parameters:
              hosts: "{{ affected_hosts }}"
              services: "{{ business_critical_services }}"
              health_check: true
            validation:
              - "services_restored"
              - "health_checks_passed"
              
          - name: "validate_system_integrity"
            type: "integrity_validation"
            parameters:
              hosts: "{{ affected_hosts }}"
              validation_type: "comprehensive"
              baseline_comparison: true
            validation:
              - "integrity_validated"
              - "no_anomalies_detected"
      
      - name: "post_incident_activities"
        description: "Post-incident documentation and lessons learned"
        type: "post_incident"
        timeout: "30m"
        dependencies: ["system_restoration"]
        actions:
          - name: "generate_incident_report"
            type: "reporting"
            parameters:
              report_type: "comprehensive"
              include_timeline: true
              include_iocs: true
              include_lessons_learned: true
            validation:
              - "report_generated"
              - "stakeholders_notified"
              
          - name: "update_threat_intelligence"
            type: "threat_intel_update"
            parameters:
              indicators: "{{ extracted_iocs }}"
              attribution: "{{ threat_attribution }}"
              sharing_level: "internal"
            validation:
              - "threat_intel_updated"
              - "indicators_shared"
              
          - name: "update_security_controls"
            type: "control_update"
            parameters:
              controls: ["detection_rules", "prevention_rules", "response_procedures"]
              update_type: "enhancement"
            validation:
              - "controls_updated"
              - "improvements_implemented"
  
  data-breach-response-playbook.yaml: |
    # Data Breach Response Playbook
    name: "data_breach_response"
    version: "1.0"
    description: "Automated response playbook for data breach incidents"
    
    # Playbook Metadata
    metadata:
      category: "security"
      severity: "critical"
      estimated_duration: "4h"
      required_approvals: true
      automation_level: "medium"
      
    # Playbook Variables
    variables:
      - name: "affected_data_types"
        type: "list"
        description: "Types of data affected by the breach"
        required: true
        
      - name: "breach_vector"
        type: "string"
        description: "Method used to breach the system"
        required: true
        
      - name: "affected_records_count"
        type: "integer"
        description: "Number of records affected"
        required: true
        
      - name: "regulatory_implications"
        type: "list"
        description: "Applicable regulatory requirements"
        required: true
        
      - name: "public_disclosure_required"
        type: "boolean"
        description: "Whether public disclosure is required"
        default: false
    
    # Playbook Steps
    steps:
      - name: "immediate_response"
        description: "Immediate response to data breach"
        type: "immediate_response"
        timeout: "10m"
        parallel: true
        actions:
          - name: "activate_incident_response_team"
            type: "team_activation"
            parameters:
              team_members: ["security_team", "legal_team", "compliance_team", "communications_team"]
              escalation_level: "executive"
              communication_method: "emergency_conference"
            validation:
              - "team_activated"
              - "conference_bridge_established"
              
          - name: "contain_breach"
            type: "containment"
            parameters:
              containment_type: "immediate"
              affected_systems: "{{ affected_systems }}"
              isolation_method: "network_segmentation"
            validation:
              - "systems_isolated"
              - "breach_contained"
              
          - name: "preserve_evidence"
            type: "evidence_preservation"
            parameters:
              preservation_scope: "comprehensive"
              affected_systems: "{{ affected_systems }}"
              forensic_imaging: true
            validation:
              - "evidence_preserved"
              - "chain_of_custody_established"
      
      - name: "breach_assessment"
        description: "Assess the scope and impact of the breach"
        type: "assessment"
        timeout: "45m"
        dependencies: ["immediate_response"]
        actions:
          - name: "determine_breach_scope"
            type: "scope_assessment"
            parameters:
              assessment_method: "comprehensive"
              data_inventory: "{{ data_inventory }}"
              affected_systems: "{{ affected_systems }}"
            validation:
              - "scope_determined"
              - "affected_data_identified"
              
          - name: "assess_data_sensitivity"
            type: "sensitivity_assessment"
            parameters:
              data_types: "{{ affected_data_types }}"
              classification_scheme: "organizational"
              regulatory_mapping: true
            validation:
              - "sensitivity_assessed"
              - "regulatory_impact_identified"
              
          - name: "analyze_breach_timeline"
            type: "timeline_analysis"
            parameters:
              analysis_period: "30d"
              event_sources: ["logs", "alerts", "user_reports"]
              correlation_analysis: true
            validation:
              - "timeline_established"
              - "initial_compromise_identified"
              
          - name: "assess_attacker_access"
            type: "access_assessment"
            parameters:
              access_analysis: "comprehensive"
              privilege_escalation: true
              lateral_movement: true
            validation:
              - "access_scope_determined"
              - "compromise_extent_identified"
      
      - name: "legal_and_regulatory_response"
        description: "Address legal and regulatory requirements"
        type: "compliance"
        timeout: "60m"
        dependencies: ["breach_assessment"]
        actions:
          - name: "assess_notification_requirements"
            type: "notification_assessment"
            parameters:
              regulations: "{{ regulatory_implications }}"
              affected_records: "{{ affected_records_count }}"
              jurisdiction_analysis: true
            validation:
              - "notification_requirements_identified"
              - "timelines_established"
              
          - name: "prepare_regulatory_notifications"
            type: "notification_preparation"
            parameters:
              notification_type: "regulatory"
              templates: "{{ regulatory_templates }}"
              approval_required: true
            validation:
              - "notifications_prepared"
              - "legal_review_completed"
              
          - name: "prepare_customer_notifications"
            type: "customer_notification"
            parameters:
              notification_method: "multiple_channels"
              customer_segments: "{{ affected_customers }}"
              personalization: true
            validation:
              - "customer_notifications_prepared"
              - "communication_plan_approved"
              
          - name: "coordinate_with_law_enforcement"
            type: "law_enforcement_coordination"
            parameters:
              coordination_required: "{{ law_enforcement_required }}"
              jurisdiction: "{{ jurisdiction }}"
              evidence_sharing: true
            validation:
              - "law_enforcement_contacted"
              - "coordination_established"
      
      - name: "technical_investigation"
        description: "Conduct technical investigation of the breach"
        type: "investigation"
        timeout: "90m"
        dependencies: ["breach_assessment"]
        actions:
          - name: "forensic_analysis"
            type: "digital_forensics"
            parameters:
              analysis_scope: "comprehensive"
              evidence_sources: "{{ preserved_evidence }}"
              timeline_reconstruction: true
            validation:
              - "forensic_analysis_completed"
              - "attack_vector_identified"
              
          - name: "malware_analysis"
            type: "malware_analysis"
            parameters:
              samples: "{{ collected_samples }}"
              analysis_type: "comprehensive"
              attribution_analysis: true
            validation:
              - "malware_analyzed"
              - "capabilities_identified"
              
          - name: "vulnerability_analysis"
            type: "vulnerability_assessment"
            parameters:
              assessment_scope: "{{ affected_systems }}"
              vulnerability_types: "all"
              exploitation_analysis: true
            validation:
              - "vulnerabilities_identified"
              - "exploitation_path_mapped"
              
          - name: "threat_actor_analysis"
            type: "threat_attribution"
            parameters:
              attribution_sources: ["threat_intelligence", "forensic_evidence", "ttps"]
              confidence_assessment: true
            validation:
              - "threat_actor_identified"
              - "attribution_confidence_assessed"
      
      - name: "containment_and_eradication"
        description: "Contain and eradicate the threat"
        type: "containment_eradication"
        timeout: "120m"
        dependencies: ["technical_investigation"]
        actions:
          - name: "eliminate_threat_actor_access"
            type: "access_elimination"
            parameters:
              elimination_method: "comprehensive"
              affected_systems: "{{ affected_systems }}"
              credential_reset: true
            validation:
              - "threat_actor_access_eliminated"
              - "credentials_reset"
              
          - name: "patch_vulnerabilities"
            type: "vulnerability_remediation"
            parameters:
              vulnerabilities: "{{ identified_vulnerabilities }}"
              patching_priority: "critical"
              emergency_change: true
            validation:
              - "vulnerabilities_patched"
              - "systems_hardened"
              
          - name: "remove_malware"
            type: "malware_removal"
            parameters:
              malware_locations: "{{ malware_locations }}"
              removal_method: "comprehensive"
              verification_required: true
            validation:
              - "malware_removed"
              - "clean_state_verified"
              
          - name: "enhance_monitoring"
            type: "monitoring_enhancement"
            parameters:
              monitoring_scope: "{{ affected_systems }}"
              monitoring_type: "enhanced"
              alert_tuning: true
            validation:
              - "monitoring_enhanced"
              - "detection_capabilities_improved"
      
      - name: "recovery_and_restoration"
        description: "Recover and restore affected systems"
        type: "recovery"
        timeout: "180m"
        dependencies: ["containment_and_eradication"]
        actions:
          - name: "restore_from_clean_backups"
            type: "backup_restoration"
            parameters:
              backup_sources: "{{ clean_backups }}"
              restoration_scope: "{{ affected_systems }}"
              integrity_verification: true
            validation:
              - "systems_restored"
              - "integrity_verified"
              
          - name: "implement_additional_controls"
            type: "control_implementation"
            parameters:
              controls: "{{ additional_controls }}"
              implementation_scope: "comprehensive"
              testing_required: true
            validation:
              - "controls_implemented"
              - "effectiveness_verified"
              
          - name: "conduct_security_testing"
            type: "security_testing"
            parameters:
              testing_scope: "{{ affected_systems }}"
              testing_types: ["vulnerability_scan", "penetration_test", "configuration_review"]
            validation:
              - "security_testing_completed"
              - "no_residual_vulnerabilities"
              
          - name: "gradual_service_restoration"
            type: "service_restoration"
            parameters:
              restoration_method: "phased"
              monitoring_required: true
              rollback_plan: true
            validation:
              - "services_restored"
              - "normal_operations_resumed"
      
      - name: "communication_and_disclosure"
        description: "Communicate with stakeholders and public"
        type: "communication"
        timeout: "240m"
        dependencies: ["recovery_and_restoration"]
        actions:
          - name: "submit_regulatory_notifications"
            type: "regulatory_submission"
            parameters:
              notifications: "{{ prepared_notifications }}"
              submission_method: "official_channels"
              confirmation_required: true
            validation:
              - "notifications_submitted"
              - "confirmation_received"
              
          - name: "notify_affected_customers"
            type: "customer_notification"
            parameters:
              notification_channels: "{{ customer_channels }}"
              personalized_notifications: true
              support_resources: true
            validation:
              - "customers_notified"
              - "support_resources_activated"
              
          - name: "public_disclosure"
            type: "public_communication"
            parameters:
              disclosure_required: "{{ public_disclosure_required }}"
              communication_channels: ["press_release", "website", "social_media"]
              messaging_approval: true
            validation:
              - "public_disclosure_completed"
              - "messaging_consistent"
              
          - name: "stakeholder_briefings"
            type: "stakeholder_communication"
            parameters:
              stakeholders: ["executives", "board", "partners", "vendors"]
              briefing_format: "comprehensive"
              q_and_a_session: true
            validation:
              - "stakeholders_briefed"
              - "questions_addressed"
      
      - name: "post_breach_activities"
        description: "Post-breach documentation and improvement"
        type: "post_incident"
        timeout: "120m"
        dependencies: ["communication_and_disclosure"]
        actions:
          - name: "conduct_lessons_learned"
            type: "lessons_learned"
            parameters:
              session_type: "comprehensive"
              participants: ["all_response_team_members"]
              improvement_identification: true
            validation:
              - "lessons_learned_documented"
              - "improvements_identified"
              
          - name: "update_incident_response_plan"
            type: "plan_update"
            parameters:
              updates: "{{ identified_improvements }}"
              validation_required: true
              approval_required: true
            validation:
              - "plan_updated"
              - "updates_approved"
              
          - name: "implement_preventive_measures"
            type: "prevention_implementation"
            parameters:
              measures: "{{ preventive_measures }}"
              implementation_timeline: "immediate"
              effectiveness_monitoring: true
            validation:
              - "preventive_measures_implemented"
              - "monitoring_established"
              
          - name: "conduct_tabletop_exercise"
            type: "exercise_planning"
            parameters:
              exercise_type: "tabletop"
              scenario: "similar_breach"
              participants: ["extended_response_team"]
            validation:
              - "exercise_scheduled"
              - "participants_identified"
  
  communication-templates.yaml: |
    # Communication Templates
    templates:
      # Incident Created Template
      incident_created:
        slack:
          title: "🚨 Security Incident Created"
          content: |
            **Incident ID:** {{ incident_id }}
            **Severity:** {{ severity }}
            **Category:** {{ category }}
            **Description:** {{ description }}
            **Affected Systems:** {{ affected_systems | join(', ') }}
            **Response Team:** {{ response_team }}
            **Created:** {{ created_at }}
            
            **Next Steps:**
            - Initial assessment in progress
            - Response team has been notified
            - Automated containment measures initiated
            
            **War Room:** #incident-{{ incident_id }}
        
        email:
          subject: "Security Incident {{ incident_id }} - {{ severity | upper }}"
          body: |
            A security incident has been detected and is currently being processed by the automated incident response system.
            
            Incident Details:
            - Incident ID: {{ incident_id }}
            - Severity: {{ severity }}
            - Category: {{ category }}
            - Description: {{ description }}
            - Affected Systems: {{ affected_systems | join(', ') }}
            - Detection Time: {{ created_at }}
            - Response Team: {{ response_team }}
            
            Automated Actions Taken:
            - Incident has been logged and assigned
            - Initial containment measures have been initiated
            - Response team has been notified
            - Evidence collection has begun
            
            Please join the incident response war room at #incident-{{ incident_id }} for coordination.
            
            This is an automated message from the Security Incident Response System.
      
      # Incident Escalated Template
      incident_escalated:
        slack:
          title: "🔥 Security Incident Escalated"
          content: |
            **Incident ID:** {{ incident_id }}
            **Severity:** {{ severity }}
            **Category:** {{ category }}
            **Escalation Reason:** {{ escalation_reason }}
            **Time Since Creation:** {{ time_since_creation }}
            **Current Status:** {{ current_status }}
            
            **Escalation Actions:**
            - Additional resources allocated
            - Management team notified
            - Enhanced monitoring activated
            
            **Immediate Action Required**
            **War Room:** #incident-{{ incident_id }}
        
        email:
          subject: "ESCALATED: Security Incident {{ incident_id }} - {{ severity | upper }}"
          body: |
            Security incident {{ incident_id }} has been escalated due to {{ escalation_reason }}.
            
            Escalation Details:
            - Incident ID: {{ incident_id }}
            - Original Severity: {{ original_severity }}
            - Current Severity: {{ severity }}
            - Escalation Reason: {{ escalation_reason }}
            - Time Since Creation: {{ time_since_creation }}
            - Current Status: {{ current_status }}
            
            Escalation Actions Taken:
            - Additional technical resources have been allocated
            - Management team has been notified
            - Enhanced monitoring has been activated
            - External support has been contacted if required
            
            This incident now requires immediate attention and active management.
            
            Please join the incident response war room at #incident-{{ incident_id }} for coordination.
            
            This is an automated message from the Security Incident Response System.
      
      # Incident Resolved Template
      incident_resolved:
        slack:
          title: "✅ Security Incident Resolved"
          content: |
            **Incident ID:** {{ incident_id }}
            **Severity:** {{ severity }}
            **Category:** {{ category }}
            **Resolution Time:** {{ resolution_time }}
            **Final Status:** {{ final_status }}
            
            **Resolution Summary:**
            - Threat contained and eradicated
            - Systems restored to normal operation
            - Monitoring enhanced
            - Lessons learned documented
            
            **War Room:** #incident-{{ incident_id }} (archived)
        
        email:
          subject: "RESOLVED: Security Incident {{ incident_id }}"
          body: |
            Security incident {{ incident_id }} has been successfully resolved.
            
            Resolution Summary:
            - Incident ID: {{ incident_id }}
            - Severity: {{ severity }}
            - Category: {{ category }}
            - Detection Time: {{ created_at }}
            - Resolution Time: {{ resolved_at }}
            - Total Duration: {{ resolution_time }}
            
            Resolution Actions Completed:
            - Threat has been contained and eradicated
            - Affected systems have been restored to normal operation
            - Security monitoring has been enhanced
            - Incident documentation has been completed
            - Lessons learned have been documented
            
            Post-Incident Activities:
            - Incident report will be distributed within 24 hours
            - Preventive measures will be implemented
            - Process improvements will be prioritized
            
            Thank you to all team members who contributed to the incident response.
            
            This is an automated message from the Security Incident Response System.
      
      # Containment Successful Template
      containment_successful:
        slack:
          title: "🛡️ Containment Successful"
          content: |
            **Incident ID:** {{ incident_id }}
            **Containment Type:** {{ containment_type }}
            **Duration:** {{ containment_duration }}
            **Affected Systems:** {{ affected_systems | join(', ') }}
            
            **Containment Actions:**
            {% for action in containment_actions %}
            - {{ action.name }}: {{ action.status }}
            {% endfor %}
            
            **Next Phase:** {{ next_phase }}
        
        email:
          subject: "Containment Successful: Incident {{ incident_id }}"
          body: |
            The containment phase for security incident {{ incident_id }} has been successfully completed.
            
            Containment Summary:
            - Incident ID: {{ incident_id }}
            - Containment Type: {{ containment_type }}
            - Start Time: {{ containment_start }}
            - Completion Time: {{ containment_end }}
            - Duration: {{ containment_duration }}
            - Affected Systems: {{ affected_systems | join(', ') }}
            
            Containment Actions Completed:
            {% for action in containment_actions %}
            - {{ action.name }}: {{ action.status }} ({{ action.completion_time }})
            {% endfor %}
            
            Verification Results:
            - Threat spread has been halted
            - Affected systems are isolated
            - Evidence has been preserved
            - Monitoring has been enhanced
            
            Next Steps:
            - Eradication phase will begin
            - Detailed analysis will continue
            - Recovery planning will commence
            
            This is an automated message from the Security Incident Response System.
      
      # Recovery Completed Template
      recovery_completed:
        slack:
          title: "🔄 Recovery Completed"
          content: |
            **Incident ID:** {{ incident_id }}
            **Recovery Type:** {{ recovery_type }}
            **Duration:** {{ recovery_duration }}
            **Systems Restored:** {{ restored_systems | join(', ') }}
            
            **Recovery Actions:**
            {% for action in recovery_actions %}
            - {{ action.name }}: {{ action.status }}
            {% endfor %}
            
            **Services Status:** {{ services_status }}
        
        email:
          subject: "Recovery Completed: Incident {{ incident_id }}"
          body: |
            The recovery phase for security incident {{ incident_id }} has been successfully completed.
            
            Recovery Summary:
            - Incident ID: {{ incident_id }}
            - Recovery Type: {{ recovery_type }}
            - Start Time: {{ recovery_start }}
            - Completion Time: {{ recovery_end }}
            - Duration: {{ recovery_duration }}
            - Systems Restored: {{ restored_systems | join(', ') }}
            
            Recovery Actions Completed:
            {% for action in recovery_actions %}
            - {{ action.name }}: {{ action.status }} ({{ action.completion_time }})
            {% endfor %}
            
            Verification Results:
            - All affected systems have been restored
            - Services are operating normally
            - Security controls have been enhanced
            - Monitoring has been validated
            
            Current Status:
            - Normal operations have been resumed
            - Enhanced monitoring is active
            - Incident documentation is being finalized
            
            This is an automated message from the Security Incident Response System.