apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "csr-controller.fullname" . }}-security-policies
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: security-policy-engine
data:
  security-policies.yaml: |
    # CSR Controller Security Policies
    version: "1.0"
    
    # Certificate Security Policies
    certificate_policies:
      # Minimum key size requirements
      key_size:
        rsa_min: 2048
        ecdsa_min: 256
        ed25519_required: true
      
      # Certificate validity periods
      validity_periods:
        max_validity: "8760h"  # 1 year
        min_validity: "1h"     # 1 hour
        default_validity: "2160h"  # 90 days
      
      # Allowed certificate usages
      allowed_usages:
        - "digital signature"
        - "key encipherment"
        - "server auth"
        - "client auth"
      
      # Forbidden certificate usages
      forbidden_usages:
        - "code signing"
        - "email protection"
        - "time stamping"
      
      # Subject Alternative Name policies
      san_policies:
        dns_patterns:
          allowed:
            - "*.alt.production.local"
            - "*.alt.staging.local"
            - "*.alt.development.local"
            - "*.svc.cluster.local"
          forbidden:
            - "*.com"
            - "*.org"
            - "*.net"
            - "localhost"
        
        ip_ranges:
          allowed:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
            - "127.0.0.1/32"
          forbidden:
            - "0.0.0.0/0"
            - "169.254.0.0/16"
    
    # CSR Approval Policies
    approval_policies:
      # Automatic approval conditions
      auto_approval:
        enabled: {{ .Values.csrController.approvalPolicy.autoApprove | default true }}
        conditions:
          - type: "subject_match"
            patterns:
              - "CN=*.alt.production.local"
              - "CN=*.svc.cluster.local"
          - type: "issuer_match"
            patterns:
              - "system:serviceaccount:*"
              - "system:node:*"
          - type: "usage_match"
            usages:
              - "server auth"
              - "client auth"
      
      # Manual approval requirements
      manual_approval:
        conditions:
          - type: "external_dns"
            description: "External DNS names require manual approval"
          - type: "long_validity"
            threshold: "8760h"
            description: "Certificates with validity > 1 year require manual approval"
          - type: "privileged_usage"
            usages:
              - "code signing"
              - "email protection"
            description: "Privileged usages require manual approval"
      
      # Rejection conditions
      rejection:
        conditions:
          - type: "blacklisted_subject"
            patterns:
              - "CN=*.example.com"
              - "CN=test*"
          - type: "weak_key"
            description: "Keys smaller than minimum size"
          - type: "expired_validity"
            description: "Requested validity period exceeds maximum"
    
    # Threat Detection Policies
    threat_detection:
      enabled: {{ .Values.securityPolicyEngine.threatDetection.enabled | default true }}
      
      # Anomaly detection
      anomaly_detection:
        enabled: true
        thresholds:
          csr_rate_limit: 100  # CSRs per hour per service account
          bulk_requests: 20    # Bulk CSR requests threshold
          unusual_patterns: 5  # Unusual request patterns threshold
      
      # Suspicious activity detection
      suspicious_activity:
        patterns:
          - type: "rapid_csr_creation"
            threshold: 10
            window: "5m"
          - type: "unusual_subject_patterns"
            patterns:
              - "CN=admin*"
              - "CN=root*"
              - "CN=system*"
          - type: "external_issuer_requests"
            description: "Requests from external issuers"
      
      # Behavioral analysis
      behavioral_analysis:
        enabled: true
        learning_period: "7d"
        alert_threshold: 0.8
        
        patterns:
          - "service_account_behavior"
          - "namespace_behavior"
          - "temporal_patterns"
          - "geographic_patterns"
    
    # Compliance Policies
    compliance:
      standards:
        {{- range .Values.securityPolicyEngine.compliance.standards }}
        - {{ . | quote }}
        {{- end }}
      
      # SOC 2 Type II requirements
      soc2:
        enabled: {{ has "SOC2" .Values.securityPolicyEngine.compliance.standards }}
        requirements:
          - "audit_trail_integrity"
          - "access_control_verification"
          - "data_encryption_validation"
          - "incident_response_logging"
      
      # PCI DSS requirements
      pci_dss:
        enabled: {{ has "PCI_DSS" .Values.securityPolicyEngine.compliance.standards }}
        requirements:
          - "strong_cryptography"
          - "key_management_validation"
          - "access_restriction_enforcement"
          - "vulnerability_management"
      
      # FIPS 140-2 requirements
      fips_140_2:
        enabled: {{ has "FIPS_140_2" .Values.securityPolicyEngine.compliance.standards }}
        requirements:
          - "approved_algorithms_only"
          - "key_generation_validation"
          - "cryptographic_module_validation"
      
      # ISO 27001 requirements
      iso_27001:
        enabled: {{ has "ISO_27001" .Values.securityPolicyEngine.compliance.standards }}
        requirements:
          - "security_control_implementation"
          - "risk_assessment_validation"
          - "incident_management_integration"
          - "continuous_monitoring"
    
    # Zero Trust Policies
    zero_trust:
      enabled: {{ .Values.securityPolicyEngine.zeroTrust.enabled | default false }}
      
      # Identity verification
      identity_verification:
        require_workload_identity: true
        require_service_account_token: true
        require_pod_identity: true
        require_namespace_isolation: true
      
      # Contextual access controls
      contextual_access:
        factors:
          - "time_of_day"
          - "source_location"
          - "resource_criticality"
          - "user_behavior"
        
        policies:
          - name: "high_risk_operations"
            conditions:
              - "certificate_validity > 30d"
              - "external_dns_names"
            requirements:
              - "multi_factor_authentication"
              - "manager_approval"
          
          - name: "production_access"
            conditions:
              - "namespace == alt-production"
            requirements:
              - "production_service_account"
              - "approved_source_ip"
              - "business_hours_only"
      
      # Continuous verification
      continuous_verification:
        enabled: true
        verification_interval: "1h"
        trust_score_threshold: 0.7
        
        factors:
          - "certificate_usage_patterns"
          - "network_behavior"
          - "resource_access_patterns"
          - "temporal_consistency"
    
    # Audit and Logging Policies
    audit:
      level: {{ .Values.securityPolicyEngine.audit.level | default "standard" | quote }}
      
      # Standard audit events
      standard_events:
        - "csr_creation"
        - "csr_approval"
        - "csr_rejection"
        - "certificate_issuance"
        - "policy_violation"
      
      # Enhanced audit events
      enhanced_events:
        - "authentication_events"
        - "authorization_decisions"
        - "policy_evaluations"
        - "threat_detections"
        - "compliance_checks"
      
      # Comprehensive audit events
      comprehensive_events:
        - "all_api_calls"
        - "system_events"
        - "user_activities"
        - "data_access"
        - "configuration_changes"
      
      # Audit log retention
      retention:
        standard: "90d"
        enhanced: "1y"
        comprehensive: "7y"
      
      # Audit log integrity
      integrity:
        enabled: true
        signing_key: "audit-signing-key"
        verification_interval: "1h"
        blockchain_logging: {{ .Values.securityPolicyEngine.blockchainAudit.enabled | default false }}
    
    # Incident Response Policies
    incident_response:
      enabled: true
      
      # Automated responses
      automated_responses:
        - trigger: "policy_violation"
          actions:
            - "block_request"
            - "alert_security_team"
            - "increase_monitoring"
        
        - trigger: "suspicious_activity"
          actions:
            - "quarantine_service_account"
            - "require_manual_approval"
            - "investigate_pattern"
        
        - trigger: "compliance_violation"
          actions:
            - "reject_request"
            - "notify_compliance_team"
            - "generate_violation_report"
      
      # Escalation policies
      escalation:
        levels:
          - level: 1
            threshold: "low_severity"
            contacts: ["security-team@alt.production.local"]
          
          - level: 2
            threshold: "medium_severity"
            contacts: ["security-team@alt.production.local", "ops-team@alt.production.local"]
          
          - level: 3
            threshold: "high_severity"
            contacts: ["security-team@alt.production.local", "ops-team@alt.production.local", "management@alt.production.local"]
      
      # Recovery procedures
      recovery:
        procedures:
          - name: "certificate_revocation"
            conditions: ["compromised_certificate"]
            steps:
              - "revoke_certificate"
              - "update_crl"
              - "notify_affected_services"
          
          - name: "ca_compromise"
            conditions: ["ca_key_compromise"]
            steps:
              - "emergency_ca_rotation"
              - "revoke_all_certificates"
              - "notify_all_stakeholders"
              - "forensic_investigation"