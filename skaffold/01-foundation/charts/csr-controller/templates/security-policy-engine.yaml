apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "csr-controller.fullname" . }}-security-policy-engine
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: security-policy-engine
spec:
  replicas: {{ .Values.securityPolicyEngine.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "csr-controller.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: security-policy-engine
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "csr-controller.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: security-policy-engine
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "csr-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: security-policy-engine
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.securityPolicyEngine.image.repository }}:{{ .Values.securityPolicyEngine.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.securityPolicyEngine.image.pullPolicy }}
        env:
        - name: POLICY_ENGINE_MODE
          value: {{ .Values.securityPolicyEngine.mode | default "enforce" | quote }}
        - name: COMPLIANCE_STANDARDS
          value: {{ .Values.securityPolicyEngine.compliance.standards | join "," | quote }}
        - name: AUDIT_LEVEL
          value: {{ .Values.securityPolicyEngine.audit.level | default "standard" | quote }}
        - name: THREAT_DETECTION_ENABLED
          value: {{ .Values.securityPolicyEngine.threatDetection.enabled | default true | quote }}
        - name: ZERO_TRUST_MODE
          value: {{ .Values.securityPolicyEngine.zeroTrust.enabled | default false | quote }}
        - name: BLOCKCHAIN_AUDIT_ENABLED
          value: {{ .Values.securityPolicyEngine.blockchainAudit.enabled | default false | quote }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 9090
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.securityPolicyEngine.resources | nindent 12 }}
        volumeMounts:
        - name: policy-config
          mountPath: /etc/security-policies
          readOnly: true
        - name: compliance-config
          mountPath: /etc/compliance
          readOnly: true
        - name: audit-logs
          mountPath: /var/log/audit
        - name: threat-intelligence
          mountPath: /etc/threat-intelligence
          readOnly: true
        {{- if .Values.securityPolicyEngine.blockchainAudit.enabled }}
        - name: blockchain-config
          mountPath: /etc/blockchain
          readOnly: true
        {{- end }}
      volumes:
      - name: policy-config
        configMap:
          name: {{ include "csr-controller.fullname" . }}-security-policies
      - name: compliance-config
        configMap:
          name: {{ include "csr-controller.fullname" . }}-compliance-config
      - name: audit-logs
        persistentVolumeClaim:
          claimName: {{ include "csr-controller.fullname" . }}-audit-logs
      - name: threat-intelligence
        secret:
          secretName: {{ .Values.securityPolicyEngine.threatIntelligence.secretName | default (printf "%s-threat-intelligence" (include "csr-controller.fullname" .)) }}
      {{- if .Values.securityPolicyEngine.blockchainAudit.enabled }}
      - name: blockchain-config
        secret:
          secretName: {{ .Values.securityPolicyEngine.blockchainAudit.secretName | default (printf "%s-blockchain-config" (include "csr-controller.fullname" .)) }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}