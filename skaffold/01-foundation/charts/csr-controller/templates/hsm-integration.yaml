apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "csr-controller.fullname" . }}-hsm-integration
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: hsm-integration
spec:
  replicas: {{ .Values.hsmIntegration.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "csr-controller.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: hsm-integration
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "csr-controller.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: hsm-integration
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "csr-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: hsm-integration
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.hsmIntegration.image.repository }}:{{ .Values.hsmIntegration.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.hsmIntegration.image.pullPolicy }}
        env:
        - name: HSM_TYPE
          value: {{ .Values.hsmIntegration.type | default "pkcs11" | quote }}
        - name: HSM_LIBRARY_PATH
          value: {{ .Values.hsmIntegration.libraryPath | default "/usr/lib/libpkcs11.so" | quote }}
        - name: HSM_SLOT_ID
          value: {{ .Values.hsmIntegration.slotId | default "0" | quote }}
        - name: HSM_PIN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.hsmIntegration.credentials.secretName | default (printf "%s-hsm-credentials" (include "csr-controller.fullname" .)) }}
              key: {{ .Values.hsmIntegration.credentials.pinKey | default "hsm-pin" }}
        - name: HSM_SO_PIN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.hsmIntegration.credentials.secretName | default (printf "%s-hsm-credentials" (include "csr-controller.fullname" .)) }}
              key: {{ .Values.hsmIntegration.credentials.soPinKey | default "hsm-so-pin" }}
        - name: HSM_USER_PIN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.hsmIntegration.credentials.secretName | default (printf "%s-hsm-credentials" (include "csr-controller.fullname" .)) }}
              key: {{ .Values.hsmIntegration.credentials.userPinKey | default "hsm-user-pin" }}
        - name: HSM_KEY_LABEL
          value: {{ .Values.hsmIntegration.keyLabel | default "alt-ca-key" | quote }}
        - name: HSM_FIPS_MODE
          value: {{ .Values.hsmIntegration.fipsMode | default true | quote }}
        - name: HSM_BACKUP_ENABLED
          value: {{ .Values.hsmIntegration.backup.enabled | default true | quote }}
        - name: HSM_CLUSTER_MODE
          value: {{ .Values.hsmIntegration.cluster.enabled | default false | quote }}
        - name: HSM_QUANTUM_READY
          value: {{ .Values.hsmIntegration.quantumReady | default false | quote }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 9090
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.hsmIntegration.resources | nindent 12 }}
        volumeMounts:
        - name: hsm-config
          mountPath: /etc/hsm
          readOnly: true
        - name: hsm-library
          mountPath: /usr/lib/hsm
          readOnly: true
        - name: hsm-logs
          mountPath: /var/log/hsm
        {{- if .Values.hsmIntegration.backup.enabled }}
        - name: hsm-backup
          mountPath: /var/backup/hsm
        {{- end }}
        {{- if .Values.hsmIntegration.cluster.enabled }}
        - name: cluster-config
          mountPath: /etc/cluster
          readOnly: true
        {{- end }}
      volumes:
      - name: hsm-config
        configMap:
          name: {{ include "csr-controller.fullname" . }}-hsm-config
      - name: hsm-library
        hostPath:
          path: {{ .Values.hsmIntegration.hostLibraryPath | default "/usr/lib/hsm" }}
          type: Directory
      - name: hsm-logs
        persistentVolumeClaim:
          claimName: {{ include "csr-controller.fullname" . }}-hsm-logs
      {{- if .Values.hsmIntegration.backup.enabled }}
      - name: hsm-backup
        persistentVolumeClaim:
          claimName: {{ include "csr-controller.fullname" . }}-hsm-backup
      {{- end }}
      {{- if .Values.hsmIntegration.cluster.enabled }}
      - name: cluster-config
        secret:
          secretName: {{ .Values.hsmIntegration.cluster.secretName | default (printf "%s-hsm-cluster-config" (include "csr-controller.fullname" .)) }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "csr-controller.fullname" . }}-hsm-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: hsm-integration
data:
  hsm-config.yaml: |
    # HSM Integration Configuration
    version: "1.0"
    
    # HSM Connection Configuration
    connection:
      type: {{ .Values.hsmIntegration.type | default "pkcs11" | quote }}
      library_path: {{ .Values.hsmIntegration.libraryPath | default "/usr/lib/libpkcs11.so" | quote }}
      slot_id: {{ .Values.hsmIntegration.slotId | default 0 }}
      
      # Connection pool settings
      pool:
        max_connections: {{ .Values.hsmIntegration.pool.maxConnections | default 10 }}
        idle_timeout: {{ .Values.hsmIntegration.pool.idleTimeout | default "300s" | quote }}
        max_lifetime: {{ .Values.hsmIntegration.pool.maxLifetime | default "3600s" | quote }}
      
      # Retry configuration
      retry:
        max_attempts: {{ .Values.hsmIntegration.retry.maxAttempts | default 3 }}
        initial_delay: {{ .Values.hsmIntegration.retry.initialDelay | default "1s" | quote }}
        max_delay: {{ .Values.hsmIntegration.retry.maxDelay | default "30s" | quote }}
        backoff_factor: {{ .Values.hsmIntegration.retry.backoffFactor | default 2.0 }}
    
    # Key Management Configuration
    key_management:
      # CA Key Configuration
      ca_key:
        label: {{ .Values.hsmIntegration.keyLabel | default "alt-ca-key" | quote }}
        key_type: "RSA"
        key_size: {{ .Values.hsmIntegration.keySize | default 4096 }}
        extractable: false
        persistent: true
        
      # Key Generation Parameters
      key_generation:
        algorithm: {{ .Values.hsmIntegration.keyGeneration.algorithm | default "RSA" | quote }}
        min_key_size: {{ .Values.hsmIntegration.keyGeneration.minKeySize | default 2048 }}
        max_key_size: {{ .Values.hsmIntegration.keyGeneration.maxKeySize | default 8192 }}
        curve: {{ .Values.hsmIntegration.keyGeneration.curve | default "P-256" | quote }}
        
      # Key Rotation Configuration
      key_rotation:
        enabled: {{ .Values.hsmIntegration.keyRotation.enabled | default true }}
        schedule: {{ .Values.hsmIntegration.keyRotation.schedule | default "0 2 1 */3 *" | quote }}  # Quarterly
        overlap_period: {{ .Values.hsmIntegration.keyRotation.overlapPeriod | default "30d" | quote }}
        
      # Key Backup Configuration
      key_backup:
        enabled: {{ .Values.hsmIntegration.backup.enabled | default true }}
        schedule: {{ .Values.hsmIntegration.backup.schedule | default "0 1 * * *" | quote }}  # Daily
        retention: {{ .Values.hsmIntegration.backup.retention | default "90d" | quote }}
        encryption: true
        verification: true
    
    # Security Configuration
    security:
      # FIPS 140-2 Configuration
      fips_140_2:
        enabled: {{ .Values.hsmIntegration.fipsMode | default true }}
        level: {{ .Values.hsmIntegration.fipsLevel | default "Level 2" | quote }}
        approved_algorithms_only: true
        
      # Common Criteria Configuration
      common_criteria:
        enabled: {{ .Values.hsmIntegration.commonCriteria.enabled | default false }}
        evaluation_level: {{ .Values.hsmIntegration.commonCriteria.level | default "EAL4+" | quote }}
        
      # Tamper Protection
      tamper_protection:
        enabled: {{ .Values.hsmIntegration.tamperProtection.enabled | default true }}
        detection_sensitivity: {{ .Values.hsmIntegration.tamperProtection.sensitivity | default "high" | quote }}
        response_action: {{ .Values.hsmIntegration.tamperProtection.responseAction | default "zeroize" | quote }}
        
      # Authentication
      authentication:
        require_user_pin: true
        require_so_pin: true
        pin_complexity: "high"
        pin_expiration: {{ .Values.hsmIntegration.authentication.pinExpiration | default "90d" | quote }}
        max_failed_attempts: {{ .Values.hsmIntegration.authentication.maxFailedAttempts | default 3 }}
        lockout_duration: {{ .Values.hsmIntegration.authentication.lockoutDuration | default "1h" | quote }}
    
    # High Availability Configuration
    high_availability:
      enabled: {{ .Values.hsmIntegration.cluster.enabled | default false }}
      
      # Cluster Configuration
      cluster:
        nodes:
          {{- range .Values.hsmIntegration.cluster.nodes }}
          - name: {{ .name | quote }}
            address: {{ .address | quote }}
            port: {{ .port | default 9090 }}
            priority: {{ .priority | default 100 }}
          {{- end }}
        
        # Load Balancing
        load_balancing:
          algorithm: {{ .Values.hsmIntegration.cluster.loadBalancing.algorithm | default "round_robin" | quote }}
          health_check_interval: {{ .Values.hsmIntegration.cluster.loadBalancing.healthCheckInterval | default "30s" | quote }}
          failover_timeout: {{ .Values.hsmIntegration.cluster.loadBalancing.failoverTimeout | default "10s" | quote }}
        
        # Synchronization
        synchronization:
          enabled: {{ .Values.hsmIntegration.cluster.synchronization.enabled | default true }}
          interval: {{ .Values.hsmIntegration.cluster.synchronization.interval | default "5m" | quote }}
          conflict_resolution: {{ .Values.hsmIntegration.cluster.synchronization.conflictResolution | default "master_wins" | quote }}
    
    # Performance Configuration
    performance:
      # Caching
      caching:
        enabled: {{ .Values.hsmIntegration.performance.caching.enabled | default true }}
        ttl: {{ .Values.hsmIntegration.performance.caching.ttl | default "1h" | quote }}
        max_entries: {{ .Values.hsmIntegration.performance.caching.maxEntries | default 1000 }}
        
      # Batching
      batching:
        enabled: {{ .Values.hsmIntegration.performance.batching.enabled | default true }}
        batch_size: {{ .Values.hsmIntegration.performance.batching.batchSize | default 10 }}
        batch_timeout: {{ .Values.hsmIntegration.performance.batching.batchTimeout | default "5s" | quote }}
        
      # Parallel Processing
      parallel_processing:
        enabled: {{ .Values.hsmIntegration.performance.parallelProcessing.enabled | default true }}
        max_workers: {{ .Values.hsmIntegration.performance.parallelProcessing.maxWorkers | default 5 }}
        queue_size: {{ .Values.hsmIntegration.performance.parallelProcessing.queueSize | default 100 }}
    
    # Monitoring and Alerting
    monitoring:
      # Health Checks
      health_checks:
        enabled: true
        interval: {{ .Values.hsmIntegration.monitoring.healthCheck.interval | default "30s" | quote }}
        timeout: {{ .Values.hsmIntegration.monitoring.healthCheck.timeout | default "10s" | quote }}
        
      # Metrics Collection
      metrics:
        enabled: true
        collection_interval: {{ .Values.hsmIntegration.monitoring.metrics.collectionInterval | default "1m" | quote }}
        retention: {{ .Values.hsmIntegration.monitoring.metrics.retention | default "30d" | quote }}
        
        # Custom Metrics
        custom_metrics:
          - name: "hsm_operations_total"
            type: "counter"
            description: "Total number of HSM operations"
            
          - name: "hsm_operation_duration_seconds"
            type: "histogram"
            description: "Duration of HSM operations"
            
          - name: "hsm_connection_pool_size"
            type: "gauge"
            description: "Current HSM connection pool size"
            
          - name: "hsm_key_operations_total"
            type: "counter"
            description: "Total number of key operations"
      
      # Alerting
      alerting:
        enabled: true
        
        # Alert Rules
        rules:
          - name: "hsm_unavailable"
            condition: "hsm_available == 0"
            severity: "critical"
            description: "HSM is unavailable"
            
          - name: "hsm_authentication_failure"
            condition: "hsm_auth_failures > 3"
            severity: "high"
            description: "Multiple HSM authentication failures"
            
          - name: "hsm_key_rotation_overdue"
            condition: "hsm_key_age > 90d"
            severity: "warning"
            description: "HSM key rotation is overdue"
            
          - name: "hsm_performance_degradation"
            condition: "hsm_operation_duration > 5s"
            severity: "warning"
            description: "HSM performance degradation detected"
    
    # Audit and Compliance
    audit:
      enabled: true
      
      # Audit Events
      events:
        - "key_generation"
        - "key_rotation"
        - "certificate_signing"
        - "authentication_events"
        - "configuration_changes"
        - "security_events"
        
      # Audit Log Configuration
      logging:
        format: "json"
        retention: {{ .Values.hsmIntegration.audit.retention | default "7y" | quote }}
        encryption: true
        integrity_protection: true
        
      # Compliance Reporting
      compliance:
        enabled: true
        standards:
          - "fips_140_2"
          - "common_criteria"
          - "soc2"
          - "pci_dss"
        
        reporting_interval: {{ .Values.hsmIntegration.compliance.reportingInterval | default "monthly" | quote }}
        
    # Integration Configuration
    integration:
      # CSR Controller Integration
      csr_controller:
        enabled: true
        endpoint: "http://csr-controller:8080"
        timeout: {{ .Values.hsmIntegration.integration.csrController.timeout | default "30s" | quote }}
        
      # Certificate Authority Integration
      ca_integration:
        enabled: true
        ca_certificate_path: "/etc/ca/ca.crt"
        ca_key_reference: "hsm:alt-ca-key"
        
      # External Systems Integration
      external_systems:
        # PKI Management Systems
        pki_systems:
          - name: "ejbca"
            enabled: {{ .Values.hsmIntegration.integration.pkiSystems.ejbca.enabled | default false }}
            endpoint: {{ .Values.hsmIntegration.integration.pkiSystems.ejbca.endpoint | default "" | quote }}
            
          - name: "dogtag"
            enabled: {{ .Values.hsmIntegration.integration.pkiSystems.dogtag.enabled | default false }}
            endpoint: {{ .Values.hsmIntegration.integration.pkiSystems.dogtag.endpoint | default "" | quote }}
        
        # Key Management Systems
        kms_systems:
          - name: "aws_kms"
            enabled: {{ .Values.hsmIntegration.integration.kmsSystems.awsKms.enabled | default false }}
            
          - name: "azure_key_vault"
            enabled: {{ .Values.hsmIntegration.integration.kmsSystems.azureKeyVault.enabled | default false }}
            
          - name: "gcp_kms"
            enabled: {{ .Values.hsmIntegration.integration.kmsSystems.gcpKms.enabled | default false }}
    
    # Future-Proofing Configuration
    future_proofing:
      # Quantum Cryptography Readiness
      quantum_readiness:
        enabled: {{ .Values.hsmIntegration.quantumReady | default false }}
        
        # Post-Quantum Cryptography
        post_quantum_crypto:
          enabled: {{ .Values.hsmIntegration.postQuantumCrypto.enabled | default false }}
          algorithms:
            - "CRYSTALS-Dilithium"
            - "FALCON"
            - "SPHINCS+"
            - "CRYSTALS-KYBER"
        
        # Quantum Key Distribution
        quantum_key_distribution:
          enabled: {{ .Values.hsmIntegration.quantumKeyDistribution.enabled | default false }}
          protocol: {{ .Values.hsmIntegration.quantumKeyDistribution.protocol | default "BB84" | quote }}
      
      # AI/ML Integration Readiness
      ai_ml_readiness:
        enabled: {{ .Values.hsmIntegration.aiMlReadiness.enabled | default false }}
        
        # Anomaly Detection
        anomaly_detection:
          enabled: {{ .Values.hsmIntegration.anomalyDetection.enabled | default false }}
          model_type: {{ .Values.hsmIntegration.anomalyDetection.modelType | default "isolation_forest" | quote }}
          
        # Predictive Maintenance
        predictive_maintenance:
          enabled: {{ .Values.hsmIntegration.predictiveMaintenance.enabled | default false }}
          prediction_horizon: {{ .Values.hsmIntegration.predictiveMaintenance.predictionHorizon | default "30d" | quote }}
  
  pkcs11.conf: |
    # PKCS#11 Configuration
    name = {{ .Values.hsmIntegration.pkcs11.name | default "Alt HSM" }}
    library = {{ .Values.hsmIntegration.libraryPath | default "/usr/lib/libpkcs11.so" }}
    slot = {{ .Values.hsmIntegration.slotId | default 0 }}
    
    # Slot Configuration
    slotListIndex = {{ .Values.hsmIntegration.pkcs11.slotListIndex | default 0 }}
    showInfo = {{ .Values.hsmIntegration.pkcs11.showInfo | default true }}
    
    # Token Configuration
    tokenLabel = {{ .Values.hsmIntegration.pkcs11.tokenLabel | default "Alt CA Token" }}
    manufacturerID = {{ .Values.hsmIntegration.pkcs11.manufacturerID | default "Alt RSS Reader" }}
    model = {{ .Values.hsmIntegration.pkcs11.model | default "HSM Token" }}
    serialNumber = {{ .Values.hsmIntegration.pkcs11.serialNumber | default "001" }}
    
    # Security Configuration
    loginRequired = true
    userPinRequired = true
    soPinRequired = true
    
    # Performance Configuration
    maxSessionCount = {{ .Values.hsmIntegration.pkcs11.maxSessionCount | default 10 }}
    maxRwSessionCount = {{ .Values.hsmIntegration.pkcs11.maxRwSessionCount | default 5 }}
    
    # Cryptographic Configuration
    supportedMechanisms = {{ .Values.hsmIntegration.pkcs11.supportedMechanisms | default "CKM_RSA_PKCS_KEY_PAIR_GEN,CKM_RSA_PKCS,CKM_SHA256_RSA_PKCS,CKM_ECDSA_KEY_PAIR_GEN,CKM_ECDSA,CKM_SHA256" }}
    
    # Logging Configuration
    logLevel = {{ .Values.hsmIntegration.pkcs11.logLevel | default "INFO" }}
    logFile = {{ .Values.hsmIntegration.pkcs11.logFile | default "/var/log/hsm/pkcs11.log" }}