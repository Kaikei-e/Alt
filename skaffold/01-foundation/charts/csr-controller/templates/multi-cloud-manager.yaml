apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "csr-controller.fullname" . }}-multi-cloud-manager
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: multi-cloud-manager
spec:
  replicas: {{ .Values.multiCloudManager.replicas | default 2 }}
  selector:
    matchLabels:
      {{- include "csr-controller.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: multi-cloud-manager
  template:
    metadata:
      labels:
        {{- include "csr-controller.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: multi-cloud-manager
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/multi-cloud-config.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "csr-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.multiCloudManager.podSecurityContext | nindent 8 }}
      containers:
      - name: multi-cloud-manager
        image: "{{ .Values.multiCloudManager.image.repository }}:{{ .Values.multiCloudManager.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.multiCloudManager.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.multiCloudManager.securityContext | nindent 10 }}
        env:
        - name: CLOUD_PROVIDERS
          value: {{ .Values.multiCloudManager.cloudProviders | join "," | quote }}
        - name: AWS_REGION
          value: {{ .Values.multiCloudManager.aws.region | default "us-west-2" }}
        - name: AZURE_LOCATION
          value: {{ .Values.multiCloudManager.azure.location | default "westus2" }}
        - name: GCP_ZONE
          value: {{ .Values.multiCloudManager.gcp.zone | default "us-west1-a" }}
        - name: HYBRID_MODE
          value: {{ .Values.multiCloudManager.hybridMode | default "true" | quote }}
        - name: CROSS_CLOUD_SYNC_ENABLED
          value: {{ .Values.multiCloudManager.crossCloudSync.enabled | default "true" | quote }}
        - name: FEDERATION_ENABLED
          value: {{ .Values.multiCloudManager.federation.enabled | default "true" | quote }}
        - name: AUTO_FAILOVER_ENABLED
          value: {{ .Values.multiCloudManager.autoFailover.enabled | default "true" | quote }}
        - name: DISASTER_RECOVERY_ENABLED
          value: {{ .Values.multiCloudManager.disasterRecovery.enabled | default "true" | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.multiCloudManager.logLevel | default "info" }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: grpc
          containerPort: 9091
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.multiCloudManager.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/multi-cloud-manager
          readOnly: true
        - name: cloud-credentials
          mountPath: /etc/cloud-credentials
          readOnly: true
        - name: tls-certs
          mountPath: /etc/ssl/certs
          readOnly: true
        - name: ca-bundle
          mountPath: /etc/ssl/ca-bundle
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: {{ include "csr-controller.fullname" . }}-multi-cloud-config
      - name: cloud-credentials
        secret:
          secretName: {{ include "csr-controller.fullname" . }}-cloud-credentials
      - name: tls-certs
        projected:
          sources:
          - secret:
              name: {{ include "csr-controller.fullname" . }}-tls-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
      - name: ca-bundle
        configMap:
          name: {{ include "csr-controller.fullname" . }}-ca-bundle
      {{- with .Values.multiCloudManager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.multiCloudManager.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.multiCloudManager.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "csr-controller.fullname" . }}-multi-cloud-manager
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: multi-cloud-manager
spec:
  type: {{ .Values.multiCloudManager.service.type | default "ClusterIP" }}
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  - port: 9091
    targetPort: grpc
    protocol: TCP
    name: grpc
  selector:
    {{- include "csr-controller.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: multi-cloud-manager

---
{{- if .Values.multiCloudManager.horizontalPodAutoscaler.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "csr-controller.fullname" . }}-multi-cloud-manager
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csr-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: multi-cloud-manager
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "csr-controller.fullname" . }}-multi-cloud-manager
  minReplicas: {{ .Values.multiCloudManager.horizontalPodAutoscaler.minReplicas | default 2 }}
  maxReplicas: {{ .Values.multiCloudManager.horizontalPodAutoscaler.maxReplicas | default 10 }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.multiCloudManager.horizontalPodAutoscaler.targetCPUUtilizationPercentage | default 70 }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.multiCloudManager.horizontalPodAutoscaler.targetMemoryUtilizationPercentage | default 80 }}
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 60
{{- end }}