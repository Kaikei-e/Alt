# Default values for common-config
# Common configuration for Alt services

# Environment configuration
environment: production

# Namespace creation control
createNamespaces: true

# Namespace configuration
namespaces:
  # Development environment
  development:
    enabled: false
    name: alt-dev
    labels:
      name: alt-dev
      environment: development

  # Staging environment
  staging:
    enabled: false
    name: alt-staging
    labels:
      name: alt-staging
      environment: staging

  # Production environment (main)
  production:
    enabled: true
    name: alt-production
    labels:
      name: alt-production
      environment: production

  # Foundation layer namespace
  foundation:
    enabled: true
    name: alt-foundation
    labels:
      name: alt-foundation
      environment: production
      service-type: foundation

  # Production service-specific namespaces
  apps:
    enabled: true
    name: alt-apps
    labels:
      name: alt-apps
      environment: production
      service-type: applications

  database:
    enabled: true
    name: alt-database
    labels:
      name: alt-database
      environment: production
      service-type: database

  search:
    enabled: true
    name: alt-search
    labels:
      name: alt-search
      environment: production
      service-type: search

  observability:
    enabled: true
    name: alt-observability
    labels:
      name: alt-observability
      environment: production
      service-type: monitoring

  ingress:
    enabled: true
    name: alt-ingress
    labels:
      name: alt-ingress
      environment: production
      service-type: ingress

  auth:
    enabled: true
    name: alt-auth
    labels:
      name: alt-auth
      environment: production
      service-type: authentication
      app.kubernetes.io/component: authentication

# Common labels applied to all resources
commonLabels:
  app.kubernetes.io/part-of: alt

# Common annotations
commonAnnotations: {}

# Resource quotas per namespace
resourceQuotas:
  enabled: true
  development:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    persistentvolumeclaims: "10"

  staging:
    requests.cpu: "8"
    requests.memory: 16Gi
    limits.cpu: "16"
    limits.memory: 32Gi
    persistentvolumeclaims: "20"

  production:
    requests.cpu: "16"
    requests.memory: 32Gi
    limits.cpu: "32"
    limits.memory: 64Gi
    persistentvolumeclaims: "50"

# Network policies
networkPolicies:
  enabled: true

  # Default deny all ingress
  defaultDenyIngress:
    enabled: true

  # Allow DNS resolution
  allowDns:
    enabled: true

  # Inter-namespace communication rules
  allowInterNamespace:
    enabled: true
    allowedNamespaces:
      - alt-apps
      - alt-database
      - alt-search
      - alt-auth
      - alt-ingress

  # Allow ingress from ingress namespace
  allowFromIngress:
    enabled: true
    ingressNamespace: alt-ingress

  # External HTTPS egress for RSS feed access
  allowExternalHttpsEgress:
    enabled: true
    # Target only alt-backend pods for external access
    targetSelector:
      matchLabels:
        app.kubernetes.io/name: alt-backend
    # Allowed ports for external access
    ports:
      - protocol: TCP
        port: 443    # HTTPS only - HTTP (80) completely blocked
      - protocol: UDP
        port: 53     # DNS resolution
      - protocol: TCP
        port: 53     # DNS over TCP
    # Blocked CIDR ranges for security
    blockedCidrs:
      - 10.0.0.0/8       # RFC1918 Class A private networks
      - 172.16.0.0/12    # RFC1918 Class B private networks  
      - 192.168.0.0/16   # RFC1918 Class C private networks
      - 10.96.0.0/12     # KIND default service CIDR
      - 10.244.0.0/16    # KIND default pod CIDR
      - 127.0.0.0/8      # Loopback addresses
      - 169.254.0.0/16   # Link-local addresses (AWS metadata, etc.)
      - 224.0.0.0/4      # Multicast addresses
      - 240.0.0.0/4      # Reserved addresses

  # Cloudflare tunnel egress (最小限の追加)
  allowCloudflareEgress:
    enabled: true
    # Target only cloudflare-tunnel pods
    targetSelector:
      matchLabels:
        app.kubernetes.io/name: cloudflare-tunnel
    # Minimal required ports
    ports:
      - protocol: TCP
        port: 443    # HTTPS to Cloudflare edge
      - protocol: UDP
        port: 53     # DNS resolution
      - protocol: TCP
        port: 53     # DNS over TCP
    # Same security blocks as RSS egress
    blockedCidrs:
      - 10.0.0.0/8
      - 172.16.0.0/12
      - 192.168.0.0/16

# Storage classes configuration
storageClasses:
  enabled: false

  default:
    name: alt-ssd
    provisioner: kubernetes.io/no-provisioner
    reclaimPolicy: Retain
    allowVolumeExpansion: true

  fast:
    name: alt-fast-ssd
    provisioner: kubernetes.io/no-provisioner
    reclaimPolicy: Retain
    allowVolumeExpansion: true

# Monitoring and observability configuration
monitoring:
  enabled: false

  # Helm Chart metrics collection
  scrapeInterval: 30s
  scrapeTimeout: 10s

  # Metrics collection image
  image:
    repository: python
    tag: 3.11-alpine
    pullPolicy: IfNotPresent

  # Resource limits for metrics collection
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

  # Node selection and scheduling
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Dashboard configuration
  dashboards:
    enabled: true
    grafana:
      folder: "Helm Charts"
      datasource: "Prometheus"

# Service Account configuration
serviceAccount:
  create: true
  name: common-config-sa
  annotations: {}

# Rollback automation configuration
rollback:
  enabled: true

  # Rollback validation image
  image:
    repository: alpine/k8s
    tag: 1.29.0
    pullPolicy: IfNotPresent

  # Timing configuration
  stabilizationDelay: 30  # seconds to wait before validation
  ttlSecondsAfterFinished: 300  # cleanup job after 5 minutes

  # Resource limits for rollback jobs
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

  # Health checks after rollback
  healthCheck:
    enabled: true
    endpoints:
      - "http://alt-backend.alt-apps.svc.cluster.local:9000/health"
      - "http://auth-service.alt-auth.svc.cluster.local:8080/health"

  # Notifications
  notifications:
    enabled: false
    webhook: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"