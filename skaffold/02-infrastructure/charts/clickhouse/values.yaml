# Default values for clickhouse
# ClickHouse database for Analytics and Data Warehousing

# Image configuration (downgraded for compatibility)
image:
  repository: clickhouse/clickhouse-server
  tag: "24.8-alpine"
  pullPolicy: IfNotPresent

# Replica configuration
replicaCount: 1

# Service account
serviceAccount:
  create: true
  automountServiceAccountToken: false
  annotations: {}
  name: ""

# Pod configuration
podAnnotations:
  app.kubernetes.io/component: "analytics-database"

podLabels: {}

podSecurityContext:
  fsGroup: 101
  fsGroupChangePolicy: OnRootMismatch  # CRITICAL FIX: Prevents timeout from recursive chown
  runAsUser: 101
  runAsGroup: 101
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 101
  runAsGroup: 101
  seccompProfile:
    type: RuntimeDefault

# Service configuration
service:
  type: ClusterIP
  httpPort: 8123
  tcpPort: 9000
  mysqlPort: 9004
  postgresqlPort: 9005
  interserverPort: 9009
  annotations: {}

  headless:
    enabled: true
    annotations: {}

# Authentication configuration (analytics-specific)
auth:
  username: "clickhouse_user"
  password: "analytics_secure_password"
  database: "alt_analytics"
  existingSecret: ""
  secretKeys:
    password: "clickhouse-password"
    username: "username"
    database: "database"

  # SHA256 hash of password (optional, for users.xml)
  passwordSha256: ""

  # Additional users for analytics
  additionalUsers: []
    # - username: "readonly_user"
    #   password: "readonly_password"
    #   passwordSha256: ""
    #   networks: ["10.0.0.0/8", "172.16.0.0/12"]
    #   profile: "readonly"
    #   quota: "default"
    #   databases: ["alt_analytics"]
    #   grants:
    #     - "GRANT SELECT ON alt_analytics.* TO readonly_user"

  # Extra authentication secrets
  extraSecrets: {}

# ClickHouse configuration optimized for RSS analytics - PHASE 2 LOG FIX
clickhouse:
  # Logger configuration - Updated for Pod Security Standards compliance
  logger:
    level: "information"
    size: "1000M"
    count: 10
    # CRITICAL: Use /var/lib/clickhouse/logs instead of /var/log/clickhouse-server
    path: "/var/lib/clickhouse/logs"
    errorLogPath: "/var/lib/clickhouse/logs"

  # Performance settings optimized for analytics workloads
  performance:
    maxMemoryUsage: "10000000000"  # 10GB (string to avoid scientific notation)
    maxMemoryUsageForUser: "10000000000"  # 10GB (string to avoid scientific notation)
    maxConcurrentQueries: 100
    maxServerMemoryUsage: 0  # 0 = auto
    backgroundPoolSize: 16
    backgroundMergesConcurrencyRatio: 2
    backgroundSchedulePoolSize: 16

  # Compression settings for analytics data
  compression:
    method: "lz4"
    level: 1

  # MergeTree settings optimized for RSS feed analytics
  mergeTree:
    maxSuspiciousBrokenParts: 5
    partsToDelayInsert: 150
    partsToThrowInsert: 300
    maxPartsInTotal: 100000
    mergeMaxBlockSize: 8192
    maxBytesToMergeAtMaxSpaceInPool: "1073741824"  # 1GB (string to avoid scientific notation)

  # Query profiles for different workloads
  profiles:
    default:
      maxMemoryUsage: "10000000000"  # 10GB (string to avoid scientific notation)
      useUncompressedCache: 0
      loadBalancing: "random"
      maxExecutionTime: 300  # 5 minutes
      maxBlockSize: 65536
      maxInsertBlockSize: 1048576

  # Network settings
  network:
    maxConnections: 1024
    keepAliveTimeout: 10
    maxConcurrentQueriesForUser: 64

  # Default table engine for analytics
  defaultTableEngine: "MergeTree"

  # Custom configuration (XML) - Pod Security Standards compliant
  customConfig: |
    <!-- PHASE 2: ClickHouse config for Pod Security Standards baseline compliance -->
    <clickhouse>
        <logger>
            <log>/var/lib/clickhouse/logs/clickhouse-server.log</log>
            <errorlog>/var/lib/clickhouse/logs/clickhouse-server.err.log</errorlog>
            <size>1000M</size>
            <count>10</count>
            <level>information</level>
        </logger>
        <tmp_path>/var/lib/clickhouse/tmp</tmp_path>
        <user_files_path>/var/lib/clickhouse/user_files</user_files_path>
        <format_schema_path>/var/lib/clickhouse/format_schemas</format_schema_path>
    </clickhouse>

# SSL configuration
ssl:
  enabled: true
  secretName: "clickhouse-ssl-certs"
  verificationMode: "relaxed"
  certPath: "/ssl/server.crt"
  keyPath: "/ssl/server.key"
  caPath: "/ssl/ca.crt"

# Persistence configuration optimized for analytics workloads - PHASE 2 FIX
persistence:
  data:
    enabled: true
    existingClaim: ""  # CRITICAL: Remove existingClaim for new PVC creation
    accessModes:
      - ReadWriteOnce
    size: 100Gi
    storageClass: "standard"  # INCIDENT 20 FIX: K3s only supports local-path
    # Pod Security Standards 2025: Use subPath for logs within data PVC
    subPaths:
      data: "data"
      logs: "logs"
      tmp: "tmp"

  logs:
    enabled: false  # WEB RESEARCH FIX: Use subdirectory in data PVC to avoid fsGroup complexity
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    storageClass: "standard"

# Health checks - 2025 best practices with ClickHouse-specific optimization
livenessProbe:
  initialDelaySeconds: 120  # Allow time for data dir + logs mount initialization
  periodSeconds: 30         # Standard interval for production
  timeoutSeconds: 15        # Extended timeout for ClickHouse /ping response
  failureThreshold: 10      # High tolerance before hard restart (Altinity recommendation)

readinessProbe:
  initialDelaySeconds: 90   # Allow full ClickHouse startup sequence
  periodSeconds: 20         # More frequent readiness checks
  timeoutSeconds: 15        # Match liveness timeout for consistency
  failureThreshold: 12      # Higher threshold for readiness vs liveness

# Resources optimized for analytics workloads
resources:
  limits:
    cpu: 2
    memory: 8Gi
  requests:
    cpu: 1
    memory: 4Gi

# Node selection
nodeSelector: {}
tolerations: []
affinity: {}

# Extra configuration
extraEnv: []
extraVolumes: []
extraVolumeMounts: []

# Common labels and annotations
commonLabels: {}

commonAnnotations: {}

# Dependencies configuration
secrets:
  enabled: true

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""