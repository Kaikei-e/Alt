# Default values for postgres
# PostgreSQL database for Alt RSS Reader

# Image configuration
image:
  repository: postgres
  tag: "16-alpine"
  pullPolicy: IfNotPresent

# Replica configuration
replicaCount: 1

# Service account
serviceAccount:
  create: true
  automountServiceAccountToken: false
  annotations: {}
  name: ""

# Pod configuration
podAnnotations:
  kompose.cmd: "kompose convert -f compose.yaml --out ./k8s-manifests/"
  kompose.version: "1.36.0 (ae2a39403)"

podLabels: {}

podSecurityContext:
  fsGroup: 999  # PostgreSQL standard UID for proper directory access
  fsGroupChangePolicy: OnRootMismatch  # Efficient ownership change only when needed
  runAsUser: 999  # PostgreSQL official image UID (restored from 65534)
  runAsGroup: 999
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false  # PostgreSQL needs to write logs and data
  runAsNonRoot: true
  runAsUser: 999  # PostgreSQL standard UID (restored from 65534)
  runAsGroup: 999
  seccompProfile:
    type: RuntimeDefault

# Service configuration
service:
  type: ClusterIP
  port: 5432
  annotations: {}

  headless:
    enabled: true
    annotations: {}

# Authentication
auth:
  username: "alt_db_user"
  password: "ProductionPassword123"
  database: "alt"
  existingSecret: ""
  secretKeys:
    password: "postgres-password"
    username: "username"
    database: "database"
  replicationUser: ""
  replicationPassword: ""

# Database initialization scripts
initScripts:
  enabled: true

# PostgreSQL configuration
postgres:
  maxConnections: 100
  sharedBuffers: "256MB"
  effectiveCacheSize: "1GB"
  workMem: "4MB"
  maintenanceWorkMem: "64MB"
  walKeepSize: "1GB"
  loggingCollector: "on"
  logStatement: "mod"
  logMinDurationStatement: 1000
  randomPageCost: 1.1
  effectiveIoConcurrency: 200

  autovacuum:
    maxWorkers: 3
    naptime: "1min"

  customConfig: ""

# pg_hba.conf configuration
pgHba:
  enabled: true
  localMethod: "trust"
  hostMethod: "md5"
  sslMethod: "md5"
  allowedNetworks:
    - network: "10.0.0.0/8"
      method: "md5"
    - network: "172.16.0.0/12"
      method: "md5"
    - network: "192.168.0.0/16"
      method: "md5"
  customRules: ""

# SSL configuration - Enhanced for 2025 security standards
ssl:
  enabled: true
  secretName: "postgres-ssl-secret"
  mode: "require"  # Force SSL for all connections
  certPath: "/ssl/server.crt"
  keyPath: "/ssl/server.key"
  caPath: "/ssl/ca.crt"
  # TLS 1.3 enforcement for enhanced security
  minProtocolVersion: "TLSv1.3"
  cipherSuites: "ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS"

# Persistence
persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 20Gi
  storageClass: "standard"

# Health checks - optimized for SSL and initialization time
livenessProbe:
  initialDelaySeconds: 120  # Allow time for readiness to succeed first
  periodSeconds: 30         # Less frequent liveness checks
  timeoutSeconds: 10        # Longer timeout for DB queries
  failureThreshold: 5       # Reasonable failure tolerance

readinessProbe:
  initialDelaySeconds: 90   # Allow time for SSL setup and initialization
  periodSeconds: 15         # Balanced frequency
  timeoutSeconds: 10        # Sufficient time for query execution
  failureThreshold: 8       # Higher tolerance during startup

# Resources
resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Node selection
nodeSelector: {}
tolerations: []
affinity: {}

# Extra configuration
extraEnv: []
extraVolumes: []
extraVolumeMounts: []

# Common labels and annotations
commonLabels: {}

commonAnnotations: {}

# Dependencies configuration
secrets:
  enabled: true

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""