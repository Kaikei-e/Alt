apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "auth-token-manager.fullname" . }}
  namespace: {{ .Values.kubernetes.namespace }}
  labels:
    {{- include "auth-token-manager.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  timeZone: {{ .Values.cronjob.timeZone | quote }}
  concurrencyPolicy: {{ .Values.cronjob.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ .Values.cronjob.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ .Values.cronjob.successfulJobsHistoryLimit }}
  suspend: {{ .Values.cronjob.suspend }}
  jobTemplate:
    spec:
      backoffLimit: {{ .Values.cronjob.backoffLimit }}
      activeDeadlineSeconds: {{ .Values.cronjob.activeDeadlineSeconds }}
      template:
        metadata:
          labels:
            {{- include "auth-token-manager.selectorLabels" . | nindent 12 }}
        spec:
          serviceAccountName: {{ include "auth-token-manager.serviceAccountName" . }}
          restartPolicy: Never
          shareProcessNamespace: true  # Required for Playwright browser process management
          securityContext:
            runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
            runAsUser: {{ .Values.securityContext.runAsUser }}
            runAsGroup: {{ .Values.securityContext.runAsGroup }}
            fsGroup: {{ .Values.securityContext.fsGroup }}
          containers:
          - name: {{ .Chart.Name }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            command: ["deno", "run", "--allow-all", "main.ts", "refresh"]
            envFrom:
            - configMapRef:
                name: {{ include "auth-token-manager.fullname" . }}-config
            - secretRef:
                name: {{ include "auth-token-manager.fullname" . }}-secrets
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
            securityContext:
              allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
              readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
              capabilities:
                {{- toYaml .Values.securityContext.capabilities | nindent 16 }}
            volumeMounts:
            - name: shm-volume
              mountPath: /dev/shm
          volumes:
          - name: shm-volume
            emptyDir:
              medium: Memory
              sizeLimit: 256Mi  # Shared memory for Chromium
          nodeSelector:
            {{- toYaml .Values.nodeSelector | nindent 12 }}
          tolerations:
            {{- toYaml .Values.tolerations | nindent 12 }}