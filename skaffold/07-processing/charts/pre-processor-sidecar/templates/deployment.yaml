{{- if eq .Values.deploymentMode "deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pre-processor-sidecar.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pre-processor-sidecar.labels" . | nindent 4 }}
    deployment-mode: schedule
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.deployment.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "pre-processor-sidecar.selectorLabels" . | nindent 6 }}
      deployment-mode: schedule
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pre-processor-sidecar.labels" . | nindent 8 }}
        deployment-mode: schedule
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pre-processor-sidecar.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.deployment.scheduleMode }}
          args: ["--schedule-mode"]  # Enable dual schedule processing
          {{- else if .Values.startupCommand.args }}
          args:
            {{- toYaml .Values.startupCommand.args | nindent 12 }}
          {{- end }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- include "pre-processor-sidecar.envFromSecret" . | nindent 12 }}
            # OAuth2 token from separate secret
            - name: INOREADER_REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: pre-processor-sidecar-oauth2-token
                  key: refresh_token
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.configMap.create }}
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: tmp
              mountPath: /tmp
          {{- else }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          {{- end }}
      {{- if .Values.configMap.create }}
      volumes:
        - name: config
          configMap:
            name: {{ include "pre-processor-sidecar.fullname" . }}-config
        - name: tmp
          emptyDir: {}
      {{- else }}
      volumes:
        - name: tmp
          emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}