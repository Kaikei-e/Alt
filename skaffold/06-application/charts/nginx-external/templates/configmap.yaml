{{- if .Values.configMap.create }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nginx-external.configMapName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "nginx-external.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  nginx.conf: |
    # =========================
    # nginx-external (FULL FIX)
    # =========================

    worker_processes auto;
    worker_rlimit_nofile 65535;
    error_log /var/log/nginx/error.log warn;
    pid /tmp/nginx.pid;

    events {
      worker_connections 2048;
      use epoll;
      multi_accept on;
    }

    http {
      # DNS for variable-based proxy_pass
      resolver {{ .Values.dns.coredsIP | default "10.96.0.10" }} valid=5s ipv6=off;
      resolver_timeout 3s;

      # Cloudflare IP ranges for real IP detection
      set_real_ip_from 173.245.48.0/20;
      set_real_ip_from 103.21.244.0/22;
      set_real_ip_from 103.22.200.0/22;
      set_real_ip_from 103.31.4.0/22;
      set_real_ip_from 141.101.64.0/18;
      set_real_ip_from 108.162.192.0/18;
      set_real_ip_from 190.93.240.0/20;
      set_real_ip_from 188.114.96.0/20;
      set_real_ip_from 197.234.240.0/22;
      set_real_ip_from 198.41.128.0/17;
      set_real_ip_from 162.158.0.0/15;
      set_real_ip_from 104.16.0.0/13;
      set_real_ip_from 104.24.0.0/14;
      set_real_ip_from 172.64.0.0/13;
      set_real_ip_from 131.0.72.0/22;
      real_ip_header CF-Connecting-IP;
      real_ip_recursive on;

      map $http_upgrade $connection_upgrade { default upgrade; '' close; }
      map $http_x_forwarded_proto $xfp { default $http_x_forwarded_proto; '' https; }

      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      sendfile on; tcp_nopush on; tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      client_max_body_size 1m;  # Reduced for authentication endpoints
      server_tokens off;

      # Enhanced timeouts for security
      proxy_read_timeout 60s;
      proxy_send_timeout 60s;
      client_body_timeout 30s;
      client_header_timeout 30s;


      log_format external_main '$remote_addr - $remote_user "[$time_local]" "$request" '
                               '$status $body_bytes_sent "$http_referer" '
                               '"$http_user_agent" "$http_x_forwarded_for" '
                               'rt=$request_time upstream="$upstream_addr" '
                               'upstream_status="$upstream_status" '
                               'uct="$upstream_connect_time" urt="$upstream_response_time"';
      access_log /var/log/nginx/access.log external_main;

      # Enhanced rate limiting for authentication endpoints
      limit_req_zone $binary_remote_addr zone=auth_login:10m rate=180r/m;
      limit_req_zone $binary_remote_addr zone=auth_register:10m rate=30r/m;
      limit_req_zone $binary_remote_addr zone=auth_password_reset:10m rate=10r/m;
      limit_req_zone $binary_remote_addr zone=sessions_whoami:10m rate=120r/m;
      limit_req_zone $binary_remote_addr zone=api_limit:10m rate=1200r/m;
      limit_req_zone $binary_remote_addr zone=general_limit:10m rate=40r/s;
      limit_req_zone $binary_remote_addr zone=feed_register:10m rate=60r/m;
      limit_conn_zone $binary_remote_addr zone=addr:10m;

      gzip on; gzip_vary on; gzip_min_length 1024; gzip_proxied any; gzip_comp_level 6;
      gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

      # ----------------------------------------------------------------
      # id.curionoah.com → Kratos Public（透過プロキシ）
      # ----------------------------------------------------------------
      server {
        listen 80;
        listen [::]:80;
        server_name id.curionoah.com;

        # (HSTS は CF 側で付与推奨)
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;

        location /external-health {
          access_log off;
          add_header Content-Type "text/plain; charset=utf-8";
          add_header X-Health-Check "kratos-proxy-transparent" always;
          return 200 "Kratos Proxy Health OK\nUpstream: kratos-public.alt-auth.svc.cluster.local:4433\n";
        }

        # Rate-limited authentication endpoints - login
        location ~ ^/self-service/login/ {
          limit_req zone=auth_login burst=10 nodelay;
          limit_req_status 429;

          set $kratos_upstream "kratos-public.alt-auth.svc.cluster.local:4433";
          proxy_pass http://$kratos_upstream;

          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;
          proxy_set_header X-Forwarded-Host  $host;
          proxy_set_header X-Request-ID      $request_id;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          proxy_buffering on;
          proxy_buffer_size 4k;
          proxy_buffers 8 4k;

          add_header X-Kratos-Proxy "nginx-external-transparent" always;
        }

        # Rate-limited authentication endpoints - registration
        location ~ ^/self-service/registration/ {
          limit_req zone=auth_register burst=3 nodelay;

          set $kratos_upstream "kratos-public.alt-auth.svc.cluster.local:4433";
          proxy_pass http://$kratos_upstream;

          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;
          proxy_set_header X-Forwarded-Host  $host;
          proxy_set_header X-Request-ID      $request_id;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          proxy_buffering on;
          proxy_buffer_size 4k;
          proxy_buffers 8 4k;

          add_header X-Kratos-Proxy "nginx-external-transparent" always;
        }

        # Rate-limited authentication endpoints - recovery  
        location ~ ^/self-service/recovery/ {
          limit_req zone=auth_password_reset burst=2 nodelay;

          set $kratos_upstream "kratos-public.alt-auth.svc.cluster.local:4433";
          proxy_pass http://$kratos_upstream;

          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;
          proxy_set_header X-Forwarded-Host  $host;
          proxy_set_header X-Request-ID      $request_id;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          proxy_buffering on;
          proxy_buffer_size 4k;
          proxy_buffers 8 4k;

          add_header X-Kratos-Proxy "nginx-external-transparent" always;
        }

        location /sessions/whoami {
          limit_req zone=sessions_whoami burst=10 nodelay;

          set $kratos_upstream "kratos-public.alt-auth.svc.cluster.local:4433";
          proxy_pass http://$kratos_upstream;

          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;
          proxy_set_header X-Forwarded-Host  $host;
          proxy_set_header X-Request-ID      $request_id;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;

          proxy_connect_timeout 5s;
          proxy_send_timeout 15s;
          proxy_read_timeout 15s;

          add_header X-Kratos-Proxy "nginx-external-transparent" always;
        }

        location / {
          set $kratos_upstream "kratos-public.alt-auth.svc.cluster.local:4433";
          proxy_pass http://$kratos_upstream;

          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;
          proxy_set_header X-Forwarded-Host  $host;
          proxy_set_header X-Request-ID      $request_id;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          proxy_buffering on;
          proxy_buffer_size 4k;
          proxy_buffers 8 4k;

          add_header X-Kratos-Proxy "nginx-external-transparent" always;
        }
      }

      # ----------------------------------------------------------------
      # curionoah.com（メイン）
      # ----------------------------------------------------------------
      server {
        listen 80;
        listen [::]:80;
        server_name curionoah.com;

        # 上流の CSP を全経路で抑止（混在防止）
        proxy_hide_header Content-Security-Policy;
        proxy_hide_header Content-Security-Policy-Report-Only;

        # Enhanced security headers per TODO.md requirements
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), usb=(), bluetooth=()" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://id.curionoah.com; object-src 'none'; base-uri 'self'; frame-ancestors 'self'" always;

        add_header X-Request-ID $request_id always;
        add_header X-Alt-Pod    $hostname   always;
        add_header X-Upstream-Addr   $upstream_addr   always;
        add_header X-Upstream-Status $upstream_status always;

        # ===== Next static files (unified location) =====
        location ^~ /_next/static/ {
          # （ここで add_header を使うと上位ヘッダは継承されないため、必要なものを明示）
          add_header Cache-Control "public, max-age=31536000, immutable" always;
          add_header X-Upstream-Addr   $upstream_addr   always;
          add_header X-Upstream-Status $upstream_status always;

          proxy_pass http://alt-frontend.alt-apps.svc.cluster.local:3000;
          proxy_set_header Host              $host;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;

          proxy_connect_timeout {{ .Values.nginx.timeouts.proxyConnect }};
          proxy_send_timeout    {{ .Values.nginx.timeouts.proxySend }};
          proxy_read_timeout    {{ .Values.nginx.timeouts.proxyRead }};
        }

        # ===== Frontend health =====
        location /api/health {
          set $frontend_upstream "alt-frontend.alt-apps.svc.cluster.local:3000";
          proxy_pass http://$frontend_upstream;

          add_header X-Health-Source "alt-frontend" always;
          add_header X-Upstream-Addr   $upstream_addr   always;
          add_header X-Upstream-Status $upstream_status always;

          proxy_set_header Host              $host;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;

          proxy_connect_timeout 5s;
          proxy_send_timeout 10s;
          proxy_read_timeout 10s;
        }

        # ===== CSRF 直通 =====
        location = /api/auth/csrf {
          proxy_hide_header Content-Security-Policy;
          proxy_hide_header Content-Security-Policy-Report-Only;

          set $auth_upstream "auth-service.alt-auth.svc.cluster.local:8080";
          proxy_pass http://$auth_upstream/v1/auth/csrf;

          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;
          proxy_set_header X-Request-ID      $request_id;

          proxy_set_header X-Internal-Service "nginx-external";
          proxy_set_header X-Service-Route    "csrf-direct";

          proxy_set_header Cookie $http_cookie;
          proxy_pass_header Set-Cookie;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          proxy_buffering on;
          proxy_buffer_size 4k;
          proxy_buffers 8 4k;

          proxy_next_upstream error timeout http_502 http_503 http_504;
          proxy_next_upstream_tries 2;
          proxy_next_upstream_timeout 20s;

          add_header X-Auth-Source "auth-service-direct" always;
          add_header X-CSRF-Fix    "X26-Phase1-Direct-Route" always;
          add_header X-Upstream-Addr   $upstream_addr   always;
          add_header X-Upstream-Status $upstream_status always;
        }

        # ===== Auth API (/api/auth/* → auth-service direct) =====
        location ~ ^/api/auth/(?<rest>.*)$ {
          set $auth_upstream "auth-service.alt-auth.svc.cluster.local:8080";
          proxy_pass http://$auth_upstream/v1/auth/$rest$is_args$args;

          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;
          proxy_set_header X-Request-ID      $request_id;

          proxy_set_header Cookie $http_cookie;
          proxy_pass_header Set-Cookie;

          proxy_http_version 1.1;
          proxy_set_header Connection "";

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          proxy_buffering on;
          proxy_buffer_size 4k;
          proxy_buffers 8 4k;

          proxy_next_upstream error timeout http_502 http_503 http_504;
          proxy_next_upstream_tries 2;
          proxy_next_upstream_timeout 20s;

          add_header X-Auth-Source "auth-service-direct" always;
          add_header X-Upstream-Addr   $upstream_addr   always;
          add_header X-Upstream-Status $upstream_status always;
        }

        # ===== Backend API (/api → / に正規化) =====
        location /api/ {
          proxy_hide_header Content-Security-Policy;
          proxy_hide_header Content-Security-Policy-Report-Only;

          # Use standard proxy_pass with trailing slash for clean URL rewriting
          proxy_pass http://alt-backend.alt-apps.svc.cluster.local:9000/;
          
          # Ensure authentication status codes are passed through (don't intercept 401/403)
          proxy_intercept_errors off;

          add_header X-Upstream-Addr   $upstream_addr   always;
          add_header X-Upstream-Status $upstream_status always;

          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;
          proxy_set_header X-Request-ID      $request_id;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;

          limit_req zone=api_limit burst=300 nodelay;
          limit_conn addr 20;

          proxy_buffering on;
          proxy_buffer_size 8k;
          proxy_buffers 16 8k;
          proxy_busy_buffers_size 16k;

          proxy_connect_timeout 15s;
          proxy_send_timeout 60s;
          proxy_read_timeout 60s;

          proxy_next_upstream error timeout http_502 http_503 http_504;
          proxy_next_upstream_tries 3;
          proxy_next_upstream_timeout 45s;
        }

        # ===== ドキュメント（HTML）配信：CSPはここで“1本だけ”付与 =====
        location / {
          # ⚠ add_header を使うので、server階層のヘッダは継承されない。
          # そのため、この場所で必要なヘッダを再宣言する。
          add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' blob: data: https:; font-src 'self' data:; connect-src 'self' https://id.curionoah.com https://curionoah.com https: wss:; form-action 'self' https://id.curionoah.com; frame-ancestors 'self'; report-to csp-endpoint; report-uri /security/csp-report" always;
          add_header Reporting-Endpoints 'csp-endpoint="https://curionoah.com/security/csp-report"' always;

          # 再宣言（継承されないため）
          add_header Referrer-Policy "strict-origin-when-cross-origin" always;
          add_header X-Content-Type-Options "nosniff" always;
          add_header X-Frame-Options "SAMEORIGIN" always;
          add_header X-XSS-Protection "1; mode=block" always;
          add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

          # デバッグ
          add_header X-Upstream-Addr   $upstream_addr   always;
          add_header X-Upstream-Status $upstream_status always;
          add_header X-Req-Host $host always;
          add_header X-Srv-Name $server_name always;
          add_header X-Alt-Pod  $hostname always;

          proxy_pass http://alt-frontend.alt-apps.svc.cluster.local:3000;

          proxy_set_header Host              $host;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $xfp;

          proxy_pass_header Cache-Control;
          proxy_pass_header ETag;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;

          proxy_connect_timeout 5s;
          proxy_read_timeout 75s;
          proxy_send_timeout 75s;

          proxy_next_upstream error timeout http_502 http_503 http_504;
          proxy_next_upstream_tries 3;
          proxy_next_upstream_timeout 60s;

          proxy_buffering off;
        }

        # ===== CSP Report Endpoint =====
        location = /security/csp-report {
          if ($request_method = POST) { access_log off; return 204; }
          return 405;
        }

        # ===== Health =====
        location /external-health {
          access_log off;
          add_header Content-Type "text/plain; charset=utf-8";
          add_header X-Health-Check "external-ultrathink-permanent-fix" always;
          return 200 "OK\n";
        }

        # ===== Block =====
        location ~ /\. { deny all; access_log off; log_not_found off; }
        location ~ /(wp-admin|wp-login|admin|phpmyadmin) { deny all; access_log off; log_not_found off; }
      }

      # ---- 8080 (probe) ----
      server {
        listen 8080 default_server;
        listen [::]:8080 default_server;
        server_name _;
        access_log off;

        location /nginx-health {
          add_header X-Health-Check "nginx-external" always;
          add_header X-Pod-Name "$hostname" always;
          return 200 "nginx-external alive\n";
        }

        location / { add_header Content-Type "text/plain; charset=utf-8"; return 404 "Not Found\n"; }
      }
    }
{{- end }}
