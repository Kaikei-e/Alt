version: '3.8'

services:
  test-postgres:
    image: postgres:16
    container_name: auth-test-postgres
    environment:
      POSTGRES_DB: auth_test_db
      POSTGRES_USER: auth_test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - ./tests/integration/sql:/docker-entrypoint-initdb.d
      - test_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_test_user -d auth_test_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auth-test-network

  test-kratos-migrate:
    image: oryd/kratos:v1.0.0
    container_name: auth-test-kratos-migrate
    depends_on:
      test-postgres:
        condition: service_healthy
    environment:
      DSN: postgres://auth_test_user:test_password@test-postgres:5432/auth_test_db?sslmode=disable
    volumes:
      - ./tests/integration/kratos:/etc/config/kratos
    command: ["migrate", "sql", "-e", "--yes", "--config", "/etc/config/kratos/kratos.yml"]
    networks:
      - auth-test-network

  test-kratos:
    image: oryd/kratos:v1.0.0
    container_name: auth-test-kratos
    depends_on:
      test-kratos-migrate:
        condition: service_completed_successfully
    environment:
      DSN: postgres://auth_test_user:test_password@test-postgres:5432/auth_test_db?sslmode=disable
      SECRETS_DEFAULT: test-secret-key-32-characters-long
      SECRETS_COOKIE: test-cookie-key-32-characters-long
    volumes:
      - ./tests/integration/kratos:/etc/config/kratos
    command: ["serve", "--config", "/etc/config/kratos/kratos.yml"]
    ports:
      - "4433:4433"  # public
      - "4434:4434"  # admin
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4434/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - auth-test-network

# NOTE: test-auth-service is not included in this setup
# Integration tests will connect directly to test-postgres and test-kratos

volumes:
  test_postgres_data:
    driver: local

networks:
  auth-test-network:
    driver: bridge