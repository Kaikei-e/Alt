apiVersion: apps/v1
kind: Deployment
metadata:
  name: kratos
  namespace: alt-auth
  labels:
    app: kratos
    app.kubernetes.io/name: kratos
    version: v1.3.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kratos
  template:
    metadata:
      labels:
        app: kratos
        app.kubernetes.io/name: kratos
        version: v1.2.0
      annotations:
        config.linkerd.io/opaque-ports: "4433,4434"  # TODO.md修正: Linkerdプロトコル検出スキップ
    spec:
      initContainers:
      - name: kratos-migrate
        image: oryd/kratos:v1.2.0
        command: ["kratos"]
        args: ["migrate", "sql", "-e", "--yes", "--config", "/etc/config/kratos/kratos.yml"]
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kratos-secrets
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: kratos-config
          mountPath: /etc/config/kratos
        - name: kratos-schemas
          mountPath: /etc/config/kratos/schemas
      containers:
      - name: kratos
        image: oryd/kratos:v1.2.0
        command: ["kratos"]
        args: ["serve", "all", "--config", "/etc/config/kratos/kratos.yml"]
        ports:
        - containerPort: 4433
          name: public
        - containerPort: 4434
          name: admin
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kratos-secrets
              key: POSTGRES_PASSWORD
        - name: KRATOS_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: kratos-secrets
              key: KRATOS_COOKIE_SECRET
        - name: KRATOS_CIPHER_SECRET
          valueFrom:
            secretKeyRef:
              name: kratos-secrets
              key: KRATOS_CIPHER_SECRET
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kratos-secrets
              key: SMTP_PASSWORD
        volumeMounts:
        - name: kratos-config
          mountPath: /etc/config/kratos
        - name: kratos-schemas
          mountPath: /etc/config/kratos/schemas
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health/alive
            port: 4434
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 4434
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
      volumes:
      - name: kratos-config
        configMap:
          name: kratos-config
      - name: kratos-schemas
        configMap:
          name: kratos-schemas