name: Reusable Python Test Workflow

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      python-version:
        required: false
        type: string
        default: "3.13"
      test-command:
        required: false
        type: string
        default: "pytest test_unit.py -v --junit-xml=tests/results.xml"

jobs:
  test:
    runs-on: [self-hosted, linux, X64]
    timeout-minutes: 30

    steps:
      - name: Security setup
        run: |
          # パスマスキング
          echo "::add-mask::$HOME"
          echo "::add-mask::$USER"
          echo "::add-mask::/home"
          echo "::add-mask::/opt"

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Create virtual environment
        id: setup
        run: |
          WORK_DIR="${{ runner.temp }}/python-env-${{ github.run_id }}"
          python3 -m venv "$WORK_DIR/venv"
          echo "venv=$WORK_DIR/venv" >> $GITHUB_OUTPUT
          echo "::notice::Python environment ready"

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        shell: bash
        run: |
          source "${{ steps.setup.outputs.venv }}/bin/activate"
          pip install --quiet --upgrade pip wheel setuptools pytest pytest-cov psycopg2-binary
          if [ -f "requirements.txt" ]; then
            pip install --quiet -r requirements.txt
          fi
          echo "::notice::Dependencies installed"

      - name: Run tests
        working-directory: ${{ inputs.working-directory }}
        shell: bash
        run: |
          source "${{ steps.setup.outputs.venv }}/bin/activate"
          mkdir -p tests
          set +e
          ${{ inputs.test-command }} 2>&1 | \
            sed -E 's|/home/[^/]+|***|g' | \
            grep -v "runner-" | \
            grep -v "actions-runner"
          exit ${PIPESTATUS[0]}

      - name: Cleanup
        if: ${{ always() }}
        run: |
          rm -rf "${{ steps.setup.outputs.venv }}" || true

      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: python-test-results-${{ github.run_id }}
          path: ${{ inputs.working-directory }}/tests/
          retention-days: 5
          if-no-files-found: warn
