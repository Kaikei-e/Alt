name: Alt Frontend Vitest Workflow

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      node-version:
        required: false
        type: string
        default: "24"
      pnpm-version:
        required: false
        type: string
        default: "10"
      test-type:
        required: false
        type: string
        default: "vitest"
  workflow_dispatch:
    inputs:
      working-directory:
        description: 'Working directory for the test'
        required: true
        type: string
        default: "alt-frontend"
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: "24"
      pnpm-version:
        description: 'pnpm version to use'
        required: false
        type: string
        default: "10"
      test-type:
        description: 'Type of test to run'
        required: false
        type: string
        default: "vitest"

permissions:
  contents: read

jobs:
  vitest:
    runs-on: [self-hosted, linux, X64]
    timeout-minutes: 45

    # まずは3シャード並列。環境に合わせて 2〜6 に増減してOK
    strategy:
      matrix:
        shardIndex: [1, 2, 3]
        shardTotal: [3]
      fail-fast: false

    # Working directory will be set per step to avoid conflicts

    env:
      CI: true
      FORCE_COLOR: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Verify working directory
        run: |
          echo "Current directory: $(pwd)"
          echo "Looking for package.json in current directory:"
          ls -la package.json || echo "package.json not found in current directory"
          echo "Contents of current directory:"
          ls -la

      # pnpm を導入（ここでは install 実行しない）
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ inputs.pnpm-version }}
          run_install: false

      # Node + pnpm キャッシュ（ロックファイルの場所を明示：モノレポ対策）
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: pnpm
          cache-dependency-path: ${{ inputs.working-directory }}/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: |
          NODE_OPTIONS="--max-old-space-size=3072" pnpm install --frozen-lockfile

      # Vitest をシャーディングで高速化。blob レポートを後段でマージ
      - name: Run Vitest (shard ${{ matrix.shardIndex }}/${{ matrix.shardTotal }})
        working-directory: ${{ inputs.working-directory }}
        run: |
          NODE_OPTIONS="--max-old-space-size=3072" pnpm exec vitest run \
            --pool=threads \
            --maxWorkers=3 \
            --reporter=blob \
            --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        # ↑ 末尾に \ を付けない（行継続バグ対策）

      - name: Upload shard blob report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-blob-${{ matrix.shardIndex }}
          path: .vitest-reports
          if-no-files-found: ignore
          retention-days: 3

  merge-vitest-reports:
    needs: vitest
    runs-on: [self-hosted, linux, X64]

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - uses: actions/download-artifact@v4
        with:
          path: .vitest-reports
          pattern: vitest-blob-*
          merge-multiple: true

      # blob を集約 → 通常レポータ（default）を生成
      - name: Merge blob reports
        run: |
          pnpm dlx vitest --merge-reports --reporter=default

      - name: Upload merged report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-merged-${{ github.run_id }}-${{ github.run_attempt }}
          path: .vitest-reports
          retention-days: 7
