name: Alt Frontend Vitest Workflow

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      node-version:
        required: false
        type: string
        default: "24"
      pnpm-version:
        required: false
        type: string
        default: "10"
      test-type:
        required: false
        type: string
        default: "vitest"
  workflow_dispatch:
    inputs:
      working-directory:
        description: 'Working directory for the test'
        required: true
        type: string
        default: "alt-frontend"
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: "24"
      pnpm-version:
        description: 'pnpm version to use'
        required: false
        type: string
        default: "10"
      test-type:
        description: 'Type of test to run'
        required: false
        type: string
        default: "vitest"

permissions:
  contents: read

jobs:
  vitest:
    runs-on: [self-hosted, linux, X64]
    timeout-minutes: 30

    env:
      CI: true
      FORCE_COLOR: "1"
      NODE_OPTIONS: "--max-old-space-size=4096"

    steps:
      - uses: actions/checkout@v4

      - name: Mask sensitive paths
        run: |
          echo "::add-mask::$HOME"
          echo "::add-mask::$(whoami)"
          RUNNER_BASE=$(pwd | cut -d'/' -f1-5)
          echo "::add-mask::$RUNNER_BASE"
          WORKSPACE_PATH=$(pwd | sed 's|/alt-frontend||')
          echo "::add-mask::$WORKSPACE_PATH"
          echo "::add-mask::$(echo $HOME | cut -d'/' -f1-3)"

      - name: Enable pnpm via Corepack
        run: |
          corepack enable
          corepack prepare pnpm@${{ inputs.pnpm-version }} --activate

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: pnpm
          cache-dependency-path: ${{ inputs.working-directory }}/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: pnpm install --frozen-lockfile

      - name: Run Vitest
        working-directory: ${{ inputs.working-directory }}
        run: |
          echo "Running Vitest unit tests..."
          pnpm test

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-coverage-${{ github.run_id }}
          path: ${{ inputs.working-directory }}/coverage
          retention-days: 7
          if-no-files-found: ignore
