name: Playwright Tests
on:
  push:
    branches: [ main, master ]
    paths:
      - 'alt-frontend/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'alt-frontend/**'

# 同一ブランチ/PR の古い実行をキャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read

env:
  isCI: true

jobs:
  determine-runner-integration:
    name: Determine which runner to use for integration tests
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.set-runner.outputs.runner }}
    steps:
      - name: Determine which runner to use
        id: set-runner
        uses: benjaminmichaelis/get-soonest-available-runner@v1.1.0
        with:
          primary-runner: "m222"
          fallback-runner: "ubuntu-latest"
          min-available-runners: 1
          github-token: ${{ secrets.RUNNER_TOKEN }}
  test:
    timeout-minutes: 60
    needs: determine-runner-integration
    runs-on: ${{ needs.determine-runner-integration.outputs.runner }}
    steps:
      # コード取得
      - uses: actions/checkout@v4

      # pnpm のインストール（キャッシュ対応）
      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false                            # インストールは後で手動実行

      # Node.js セットアップ（pnpm キャッシュを有効に）
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"                                 # node_modules のキャッシュ
          cache-dependency-path: "alt-frontend/app/pnpm-lock.yaml"

      # 環境変数セットアップ
      - name: Prepare environment
        working-directory: alt-frontend/app
        run: |
          npm install -g corepack@latest
          corepack enable
          corepack prepare pnpm@latest --activate
          # Playwright のバージョン取得
          echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package.json').devDependencies['@playwright/test'])")" >> $GITHUB_ENV

      # Playwright ブラウザバイナリのキャッシュ
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # 依存関係のインストール（キャッシュヒット時スキップ不可）
      - name: Install dependencies
        working-directory: alt-frontend/app
        run: pnpm install

      # ブラウザインストールはキャッシュミス時のみ
      - name: Install Playwright browsers & deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: alt-frontend/app
        run: npx playwright install --with-deps         # 必要な OS 依存ライブラリも含む

      # E2E テスト実行
      - name: Run Playwright tests
        working-directory: alt-frontend/app
        run: npx playwright test

      # 結果レポートのアップロード（常に）
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report-${{ github.run_id }}
          path: alt-frontend/app/playwright-report/
          retention-days: 30

