{{- if .Values.monitoring.enabled }}
# Deployment for Helm metrics collection
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common-config.fullname" . }}-helm-metrics
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common-config.labels" . | nindent 4 }}
    app.kubernetes.io/component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: helm-chart-metrics
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: helm-chart-metrics
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ include "common-config.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
        - name: helm-metrics
          image: {{ .Values.monitoring.image.repository }}:{{ .Values.monitoring.image.tag }}
          imagePullPolicy: {{ .Values.monitoring.image.pullPolicy }}
          command:
            - python3
            - /scripts/metrics-server.py
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: metrics
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.monitoring.resources | nindent 12 }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
              readOnly: true
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: RELEASE_NAME
              value: {{ .Release.Name }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "common-config.fullname" . }}-helm-metrics-config
            defaultMode: 0755
      {{- with .Values.monitoring.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.monitoring.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.monitoring.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
# ServiceAccount for Helm metrics collection
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "common-config.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common-config.labels" . | nindent 4 }}
---
# ClusterRole for Helm metrics collection
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "common-config.fullname" . }}-helm-metrics
  labels:
    {{- include "common-config.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets", "statefulsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
---
# ClusterRoleBinding for Helm metrics collection
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "common-config.fullname" . }}-helm-metrics
  labels:
    {{- include "common-config.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "common-config.fullname" . }}-helm-metrics
subjects:
  - kind: ServiceAccount
    name: {{ include "common-config.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}