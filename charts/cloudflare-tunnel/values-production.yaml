# Production values for cloudflare-tunnel
# Cloudflare Tunnel configuration for external access

# Cloudflare Tunnel configuration
tunnel:
  # Tunnel ID (required) - get from Cloudflare dashboard
  id: ""
  # Tunnel name (optional, used for display)
  name: ""
  # Tunnel token - DO NOT PUT HERE! Use Secret instead
  token: ""
  # Account ID (optional)
  accountId: ""

# Authentication method
auth:
  # Use tunnel token (recommended)
  useToken: true
  # Use credentials.json file (alternative)
  useCredentials: false
  # Secret name containing tunnel token (when useToken is true)
  secretName: "cloudflare-tunnel-token"
  # Secret key containing tunnel token (when useToken is true)
  secretKey: "tunnel-token"

# Image configuration
image:
  repository: cloudflare/cloudflared
  tag: "2024.8.3"
  pullPolicy: IfNotPresent

# Replica configuration for production
replicaCount: 1

# Pod configuration
podAnnotations:
  rask.group: "cloudflare-tunnel"
  environment: "production"

podLabels: {}

# Resources configuration for production
resources:
  limits:
    cpu: "1"
    memory: "512Mi"
  requests:
    cpu: "100m"
    memory: "128Mi"

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 65532
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532

# Ingress rules for the tunnel
ingress:
  # Main application ingress
  - hostname: "alt.curionoah.com"
    service: "http://nginx.alt-ingress.svc.cluster.local:80"
  # Health check endpoint
  - hostname: "health.alt.curionoah.com"
    service: "http://nginx.alt-ingress.svc.cluster.local:8080/nginx-health"

# Service configuration
service:
  type: ClusterIP
  port: 2000

# Health checks
livenessProbe:
  httpGet:
    path: /ready
    port: 2000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /ready
    port: 2000
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Node selector and tolerations (disabled for single-node setup)
nodeSelector: {}
tolerations: []

# Affinity (disabled for single-node setup)
affinity: {}

# Service account
serviceAccount:
  create: true
  name: ""
  annotations: {}

# Autoscaling (disabled for single-node setup)
autoscaling:
  enabled: false

# Image pull secrets
imagePullSecrets: []

# Name overrides
nameOverride: ""
fullnameOverride: ""