{{- if .Values.externalSecrets.enabled }}
# External Secrets for database credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "common-secrets.fullname" . }}-database
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common-secrets.labels" . | nindent 4 }}
spec:
  secretStoreRef:
    name: {{ .Values.externalSecrets.secretStore.name }}
    kind: {{ .Values.externalSecrets.secretStore.kind }}
  target:
    name: postgres-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        username: "{{ `{{ .username }}` }}"
        password: "{{ `{{ .password }}` }}"
        database: "{{ `{{ .database }}` }}"
        url: "postgresql://{{ `{{ .username }}` }}:{{ `{{ .password }}` }}@postgres.alt-database.svc.cluster.local:5432/{{ `{{ .database }}` }}"
  data:
    - secretKey: username
      remoteRef:
        key: {{ .Values.externalSecrets.postgres.secretKey }}
        property: username
    - secretKey: password
      remoteRef:
        key: {{ .Values.externalSecrets.postgres.secretKey }}
        property: password
    - secretKey: database
      remoteRef:
        key: {{ .Values.externalSecrets.postgres.secretKey }}
        property: database
---
# External Secrets for auth service credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "common-secrets.fullname" . }}-auth
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common-secrets.labels" . | nindent 4 }}
spec:
  secretStoreRef:
    name: {{ .Values.externalSecrets.secretStore.name }}
    kind: {{ .Values.externalSecrets.secretStore.kind }}
  target:
    name: auth-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        jwt-secret: "{{ `{{ .jwtSecret }}` }}"
        kratos-secret: "{{ `{{ .kratosSecret }}` }}"
        oauth-client-id: "{{ `{{ .oauthClientId }}` }}"
        oauth-client-secret: "{{ `{{ .oauthClientSecret }}` }}"
  data:
    - secretKey: jwtSecret
      remoteRef:
        key: {{ .Values.externalSecrets.auth.secretKey }}
        property: jwt-secret
    - secretKey: kratosSecret
      remoteRef:
        key: {{ .Values.externalSecrets.auth.secretKey }}
        property: kratos-secret
    - secretKey: oauthClientId
      remoteRef:
        key: {{ .Values.externalSecrets.auth.secretKey }}
        property: oauth-client-id
    - secretKey: oauthClientSecret
      remoteRef:
        key: {{ .Values.externalSecrets.auth.secretKey }}
        property: oauth-client-secret
---
# External Secrets for API keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "common-secrets.fullname" . }}-api
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common-secrets.labels" . | nindent 4 }}
spec:
  secretStoreRef:
    name: {{ .Values.externalSecrets.secretStore.name }}
    kind: {{ .Values.externalSecrets.secretStore.kind }}
  target:
    name: api-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        meilisearch-key: "{{ `{{ .meilisearchKey }}` }}"
        gemma-api-key: "{{ `{{ .gemmaApiKey }}` }}"
        github-token: "{{ `{{ .githubToken }}` }}"
  data:
    - secretKey: meilisearchKey
      remoteRef:
        key: {{ .Values.externalSecrets.api.secretKey }}
        property: meilisearch-key
    - secretKey: gemmaApiKey
      remoteRef:
        key: {{ .Values.externalSecrets.api.secretKey }}
        property: gemma-api-key
    - secretKey: githubToken
      remoteRef:
        key: {{ .Values.externalSecrets.api.secretKey }}
        property: github-token
{{- end }}