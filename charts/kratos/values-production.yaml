# Production environment values for kratos

# Image configuration
image:
  repository: oryd/kratos
  tag: "v1.3.1"
  pullPolicy: IfNotPresent

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Production replicas
replicaCount: 3

# Production namespace
namespace: alt-auth

# Production resource configuration
resources:
  requests:
    memory: "256Mi"
    cpu: "200m"
  limits:
    memory: "512Mi"
    cpu: "500m"

# Production autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Pod disruption budget for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 10001
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

# Pod security context
podSecurityContext:
  fsGroup: 10001

# Production node affinity
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
            - key: "node-type"
              operator: "In"
              values: ["auth-service"]
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: kratos
          topologyKey: kubernetes.io/hostname

# Production tolerations
tolerations:
  - key: "auth-service"
    operator: "Equal"
    value: "kratos"
    effect: "NoSchedule"

# Services configuration
services:
  public:
    type: ClusterIP
    port: 4433
    targetPort: 4433
    annotations: {}
  admin:
    type: ClusterIP
    port: 4434
    targetPort: 4434
    annotations: {}

# Kratos production configuration
kratos:
  # Production mode (no dev flag)
  dev: false

  # Production URLs
  publicUrl: "https://kratos-public.{{ .Values.namespace }}.svc.cluster.local:4433/"
  adminUrl: "https://kratos-admin.{{ .Values.namespace }}.svc.cluster.local:4434/"

  # Production frontend URL
  frontendUrl: "https://alt.example.com"

  # Self-service configuration
  selfservice:
    methods:
      password:
        enabled: true
        haveibeenpwned_enabled: true
        max_breaches: 0
        ignore_network_errors: false  # Stricter for production
      totp:
        enabled: true
        issuer: "Alt RSS Reader"
      lookup_secret:
        enabled: true
      link:
        enabled: true
        lifespan: "30m"  # Shorter for production
      code:
        enabled: true
        lifespan: "10m"  # Shorter for production

    flows:
      login:
        lifespan: "5m"  # Shorter for production
      registration:
        lifespan: "10m"
      recovery:
        enabled: true
        use: "code"
      verification:
        enabled: true
        use: "code"
      settings:
        privileged_session_max_age: "10m"  # Shorter for production
        required_aal: "highest_available"

  # Production session configuration
  session:
    lifespan: "12h"  # Shorter for production
    cookie:
      persistent: true
      same_site: "Strict"  # Stricter for production
      domain: ".alt.example.com"

  # Production CORS configuration
  cors:
    enabled: true
    allowed_origins:
      - "https://alt.example.com"
      - "https://app.alt.example.com"
      - "https://alt-frontend.alt-apps.svc.cluster.local"
    allowed_methods:
      - "POST"
      - "GET"
      - "PUT"
      - "PATCH"
      - "DELETE"
    allowed_headers:
      - "Authorization"
      - "Content-Type"
      - "Cookie"
    exposed_headers:
      - "Content-Type"
      - "Set-Cookie"
    allow_credentials: true
    debug: false

  # Production courier configuration
  courier:
    smtp:
      connection_uri: "smtps://kratos@alt.example.com:$(SMTP_PASSWORD)@smtp.alt.example.com:587/?skip_ssl_verify=false"
      from_address: "noreply@alt.example.com"
      from_name: "Alt RSS Reader"

  # Production hash configuration
  hashers:
    algorithm: "bcrypt"
    bcrypt:
      cost: 14  # Higher cost for production

  # Cipher configuration
  ciphers:
    algorithm: "xchacha20-poly1305"

  # Production log configuration
  log:
    level: "warning"  # Less verbose for production
    format: "json"
    leak_sensitive_values: false

# Identity schema configuration
identitySchema:
  default:
    id: "default"
    url: "file:///etc/config/kratos/schemas/identity.schema.json"

# Production health check configuration
healthCheck:
  livenessProbe:
    httpGet:
      path: /health/alive
      port: 4434
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5  # More tolerant for production
  readinessProbe:
    httpGet:
      path: /health/ready
      port: 4434
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Migration configuration
migration:
  enabled: true
  image:
    repository: oryd/kratos
    tag: "v1.2.0"

# Production database configuration
database:
  enabled: false  # Use external kratos-postgres in alt-database namespace
  host: "kratos-postgres.alt-database.svc.cluster.local"
  port: 5432
  database: "kratos_db"
  username: "kratos_db_user"
  ssl_mode: "disable"
  max_conns: 50  # Higher for production
  max_idle_conns: 10

# Production secrets configuration (will use External Secrets)
secrets:
  enabled: false  # Managed by External Secrets Operator

# SSL configuration
ssl:
  enabled: true
  secretName: "kratos-ssl-certs"

# Production monitoring configuration
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: "monitoring"
    interval: "30s"
    scrapeTimeout: "10s"

# Network policy configuration
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: alt-apps
        - namespaceSelector:
            matchLabels:
              name: alt-ingress
      ports:
        - protocol: TCP
          port: 4433
        - protocol: TCP
          port: 4434
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: alt-auth
      ports:
        - protocol: TCP
          port: 5432
    - to: {}
      ports:
        - protocol: TCP
          port: 587  # SMTP
        - protocol: TCP
          port: 465  # SMTPS
        - protocol: TCP
          port: 25   # SMTP