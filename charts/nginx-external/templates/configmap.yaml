{{- if .Values.configMap.create }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nginx-external.configMapName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "nginx-external.labels" . | nindent 4 }}
  {{- with (include "nginx-external.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
data:
  nginx.conf: |
    # nginx external proxy configuration
    worker_processes auto;
    worker_rlimit_nofile 65535;

    error_log /var/log/nginx/error.log {{ .Values.nginx.logLevel | default "warn" }};
    pid /tmp/nginx.pid;

    events {
        worker_connections {{ .Values.nginx.workerConnections | default 2048 }};
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Basic settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout {{ .Values.nginx.keepaliveTimeout | default 65 }};
        types_hash_max_size 2048;
        client_max_body_size {{ .Values.nginx.clientMaxBodySize | default "20m" }};

        # Security settings
        server_tokens off;

        # Real IP configuration for external load balancers
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;
        set_real_ip_from 10.0.0.0/8;
        set_real_ip_from 172.16.0.0/12;
        set_real_ip_from 192.168.0.0/16;
        {{- if eq .Values.service.type "LoadBalancer" }}
        set_real_ip_from 169.254.0.0/16; # AWS metadata service
        {{- end }}

        # Request ID generation
        map $request_id $formatted_request_id {
            default $request_id;
        }

        # Log format for external traffic
        {{- if .Values.nginx.accessLogFormat }}
        log_format main {{ .Values.nginx.accessLogFormat | quote }};
        {{- else }}
        log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent rt=$request_time';
        {{- end }}

        access_log /var/log/nginx/access.log main;

        # Rate limiting zones
        {{- include "nginx-external.rateLimitZones" . | nindent 8 }}

        # GeoIP configuration
        {{- include "nginx-external.geoip" . | nindent 8 }}

        # Cache configuration
        {{- include "nginx-external.cache" . | nindent 8 }}

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        # Upstream definitions
        {{- include "nginx-external.upstreams" . | nindent 8 }}

        # Include additional configuration files
        include /etc/nginx/conf.d/*.conf;
    }

  default.conf: |
    # Default server configuration for external nginx
    {{- include "nginx-external.servers" . | nindent 4 }}

  health.conf: |
    # Health check server on port 8080
    server {
        listen 8080 default_server;
        server_name _;

        access_log off;

        location /nginx-health {
            return 200 "nginx external ok\n";
            add_header Content-Type text/plain;
            add_header X-Health-Check "nginx-external" always;
            add_header X-Pod-Name "$hostname" always;
        }

        {{- if .Values.monitoring.enabled }}
        location /nginx-status {
            stub_status on;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        {{- end }}

        location / {
            return 404;
        }
    }

  {{- with .Values.configMap.extraFiles }}
  {{- range $name, $content := . }}
  {{ $name }}: |
    {{- $content | nindent 4 }}
  {{- end }}
  {{- end }}
{{- end }}