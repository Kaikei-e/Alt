# Default values for kratos-postgres
# PostgreSQL database for Kratos Identity Management Service

# Image configuration
image:
  repository: postgres
  tag: "16-alpine"
  pullPolicy: IfNotPresent

# Replica configuration
replicaCount: 1

# Service account
serviceAccount:
  create: true
  automountServiceAccountToken: false
  annotations: {}
  name: ""

# Pod configuration
podAnnotations:
  kompose.cmd: "kompose convert -f compose.yaml --out ./k8s-manifests/"
  kompose.version: "1.36.0 (ae2a39403)"

podLabels: {}

podSecurityContext:
  fsGroup: 999
  runAsUser: 999
  runAsGroup: 999

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 999

# Service configuration
service:
  type: ClusterIP
  port: 5432
  annotations: {}
  
  headless:
    enabled: true
    annotations: {}

# Authentication
auth:
  username: "kratos_db_user"
  password: "kratos_secure_password"
  database: "kratos_db"
  existingSecret: ""
  secretKeys:
    password: "postgres-password"
    username: "username"
    database: "database"
  replicationUser: ""
  replicationPassword: ""

# PostgreSQL configuration optimized for Kratos identity workloads
postgres:
  # Lower connection count for identity service
  maxConnections: 50
  # Smaller memory footprint for identity workloads
  sharedBuffers: "128MB"
  effectiveCacheSize: "512MB"
  workMem: "2MB"
  maintenanceWorkMem: "32MB"
  walKeepSize: "512MB"
  loggingCollector: "on"
  logStatement: "mod"
  logMinDurationStatement: 1000
  # Optimized for small identity lookups
  randomPageCost: 1.0
  effectiveIoConcurrency: 100
  
  autovacuum:
    # More frequent autovacuum for session management
    maxWorkers: 2
    naptime: "30s"
  
  customConfig: |
    # Kratos-specific optimizations
    # Identity sessions have frequent small updates
    synchronous_commit = on
    # Small identity lookups benefit from lower costs
    seq_page_cost = 1.0

# pg_hba.conf configuration
pgHba:
  enabled: true
  localMethod: "trust"
  hostMethod: "md5"
  sslMethod: "md5"
  allowedNetworks:
    - network: "10.0.0.0/8"
      method: "md5"
    - network: "172.16.0.0/12"
      method: "md5"
    - network: "192.168.0.0/16"
      method: "md5"
  customRules: ""

# SSL configuration
ssl:
  enabled: true
  secretName: "kratos-postgres-ssl-certs"
  mode: "require"
  certPath: "/ssl/server.crt"
  keyPath: "/ssl/server.key"
  caPath: "/ssl/ca.crt"

# Persistence - smaller size for identity database
persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 5Gi
  storageClass: ""

# Health checks
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6

# Resources - smaller footprint for identity service
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 512Mi

# Node selection
nodeSelector: {}
tolerations: []
affinity: {}

# Extra configuration
extraEnv: []
extraVolumes: []
extraVolumeMounts: []

# Common labels and annotations
commonLabels:
  app.kubernetes.io/name: kratos-postgres
  app.kubernetes.io/part-of: alt
  app.kubernetes.io/component: identity-database

commonAnnotations: {}

# Dependencies configuration
secrets:
  enabled: true

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""