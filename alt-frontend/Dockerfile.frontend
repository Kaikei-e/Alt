# syntax=docker/dockerfile:1.6
# ====== build stage ======
FROM node:20-alpine AS build
WORKDIR /app

# 推奨: corepackでpnpmを有効化（グローバルnpmインストールはしない）
RUN corepack enable && corepack prepare pnpm@latest --activate \
  && apk add --no-cache libc6-compat

# 依存キャッシュ最適化
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# 残りのソースをコピーしてビルド
COPY . .
# ビルド時に注入する値（必要なら --build-arg で上書き）
ARG API_URL=http://alt-backend:9000
ARG NEXT_PUBLIC_API_BASE_URL=/api
ENV API_URL=$API_URL \
  NEXT_PUBLIC_API_BASE_URL=$NEXT_PUBLIC_API_BASE_URL
RUN pnpm run build

# ====== runtime stage ======
FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production \
  PORT=3000 \
  NEXT_TELEMETRY_DISABLED=1

# 実行に必要な成果物だけコピー（standaloneルール）
# 重要: .next/static と public は自動同梱されないので必ずコピー
COPY --from=build /app/.next/standalone ./
COPY --from=build /app/.next/static ./.next/static
COPY --from=build /app/public ./public

# 非rootユーザで動かす
RUN addgroup -S nextjs && adduser -S nextjs -G nextjs \
  && chown -R nextjs:nextjs /app
USER nextjs

EXPOSE 3000
# standaloneの最小サーバで起動（next start は使わない）
CMD ["node", "server.js"]
